{"version":3,"file":"chromatic","sources":["../src/errors.ts","../src/utils.ts","../src/default-formatters.ts","../src/formats.ts","../src/terminal.ts","../src/value-parser.ts","../src/formats-generic.ts","../src/formats-web.ts","../src/formats-styleguide.ts","../src/chromatic.ts","../src/chromatic-cli.ts"],"sourcesContent":["export enum ErrorCode {\n    NoError = 0,\n    SyntaxError,\n\n    UnexpectedOpenBracket,\n    ExpectedCloseBracket,\n    ExpectedOpenParen,\n    ExpectedCloseParen,\n    ExpectedQuote,\n\n    UnknownToken,\n    UnknownUnit,\n\n    UnknownFunction,\n    MissingArgument,\n    ExpectedArgument,\n    TooManyArguments,\n\n    ExpectedOperand,\n    InvalidOperand,\n    InvalidUnaryOperand,\n\n    ExpectedIntegerIndex,\n\n    CircularDefinition,\n    UnexpectedTokensArray,\n    UnexpectedTokensType,\n    InvalidTokenName,\n    InvalidTokenValue,\n    InconsistentTokenType,\n    UnknownFormat,\n    UnknownValueFormatter,\n    UnknownNameFormatter,\n}\n\nconst ERRORS = {\n    [ErrorCode.SyntaxError]: 'Syntax error',\n\n    [ErrorCode.UnexpectedOpenBracket]: 'Unexpected `[`',\n    [ErrorCode.ExpectedCloseBracket]: 'Expected `]`',\n    [ErrorCode.ExpectedOpenParen]: 'Expected `(`',\n    [ErrorCode.ExpectedCloseParen]: 'Expected `)`',\n    [ErrorCode.ExpectedQuote]: 'Expected `\"`',\n\n    [ErrorCode.UnknownToken]: 'Unknown token `%1`%2',\n\n    [ErrorCode.UnknownUnit]: 'Unknown unit `%1`',\n\n    [ErrorCode.UnknownFunction]: 'Unknown function `%1`%2',\n    [ErrorCode.MissingArgument]: 'Missing argument %1 of `%2` of type `%3`',\n    [ErrorCode.ExpectedArgument]:\n        'Expected argument %1 of `%2` to be of type `%3`',\n    [ErrorCode.TooManyArguments]: 'Too many arguments for function `%1(%2)`',\n\n    [ErrorCode.ExpectedOperand]: 'Expected operand',\n    [ErrorCode.InvalidOperand]: 'Invalid operand',\n    [ErrorCode.InvalidUnaryOperand]: 'Invalid operand',\n\n    [ErrorCode.CircularDefinition]: 'Circular definition of the \"%1\" token',\n    [ErrorCode.UnexpectedTokensArray]:\n        'The \"tokens\" property is an array. It should be a key/value map of tokens.\\n%1',\n    [ErrorCode.UnexpectedTokensType]:\n        'The \"tokens\" property should be a key/value map of tokens.',\n    [ErrorCode.InvalidTokenName]:\n        'Invalid token name \"%1\": it must only contain digits, letters, \"_\" and \"-\"',\n    [ErrorCode.InvalidTokenValue]:\n        'The \"%1\" token is invalid. If using a YAML file, make sure RGB hex values are within quotes',\n    [ErrorCode.InconsistentTokenType]: 'Inconsistent token type: \"%1\" ( \"%2\")',\n    [ErrorCode.UnknownFormat]: 'Unknown format \"%1\"%2',\n    [ErrorCode.UnknownValueFormatter]: 'Unknown value formatter \"%1\"%2',\n    [ErrorCode.UnknownNameFormatter]: 'Unknown name formatter \"%1\"%2',\n    [ErrorCode.ExpectedIntegerIndex]: 'Expected a number of array index',\n};\n\nexport class SyntaxError extends Error {\n    code: ErrorCode;\n    args: string[];\n    constructor(code: ErrorCode, ...args: string[]) {\n        super();\n        this.code = code;\n        this.args = args;\n    }\n}\n\nexport function throwError(code: number, ...args: string[]): void {\n    throwErrorWithContext(undefined, code, ...args);\n}\n\nexport function throwErrorWithContext(\n    context: string[],\n    code: number,\n    ...args: string[]\n): void {\n    let message = '';\n    if (process.env.TEST) {\n        message = '[ERR] ' + (ErrorCode[code] ?? code);\n    } else {\n        if (context) message = context.join('\\n') + '\\n';\n        message += ERRORS[code];\n        args.forEach((val, index) => {\n            message = message.replace(new RegExp(`%${index + 1}`, 'g'), val);\n        });\n    }\n    throw new Error(message);\n}\n","const stringSimilarity = require('string-similarity');\n\nexport function findClosestKey(\n    key: string,\n    o: object | Map<string, any>\n): string {\n    if (!key || !o) return '';\n    let keys: string[];\n    if (o instanceof Map) {\n        keys = Array.from(o.keys());\n    } else {\n        keys = Object.keys(o);\n    }\n    if (keys.length === 0) return '';\n    const result = stringSimilarity.findBestMatch(key, keys);\n    return result.bestMatch.rating > 0.1 ? result.bestMatch.target : '';\n}\n\nexport function getSuggestion(\n    key: string,\n    o: object | Map<string, any>\n): string {\n    const alt = findClosestKey(key, o);\n    return alt ? `. Did you mean \"${alt}\"?` : '';\n}\n","export const DefaultFormatters = {\n    valueFormatters: {\n        //         'color/hex': (value: Value, type: string): string =>\n        //             type === 'color' ? value.hex() : value,\n        //         'color/hsl': (value: Value, type: string): string =>\n        //             type !== 'color' ? value : Color(value).hsl(),\n        //         'color/plist': (value: Value, type: string): string => {\n        //             if (type !== 'color') return value;\n        //             const color = value.object();\n        //             return `\n        // <dict>\n        //     <key>r</key><real>${color.r / 255}</real>\n        //     <key>g</key><real>${color.g / 255}</real>\n        //     <key>b</key><real>${color.b / 255}</real>\n        // </dict>\n        // `;\n        //         },\n    },\n\n    nameFormatters: {\n        camelcase: (name: string, theme: string): string =>\n            (name + !theme ? '' : '.' + theme)\n                .toLowerCase()\n                .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (ltr, idx) =>\n                    idx === 0 ? ltr.toLowerCase() : ltr.toUpperCase()\n                )\n                .replace(/\\s+/g, ''),\n        kebabcase: (name: string, theme: string): string =>\n            (name + !theme ? '' : '.' + theme)\n                .match(\n                    /[A-Z]{2,}(?=[A-Z][a-z0-9]*|\\b)|[A-Z]?[a-z0-9]*|[A-Z]|[0-9]+/g\n                )\n                .filter(Boolean)\n                .map(x => x.toLowerCase())\n                .join('-'),\n        uppercase: (name: string, theme: string): string =>\n            (name + !theme ? '' : '.' + theme).toUpperCase(),\n        lowercase: (name: string, theme: string): string =>\n            (name + !theme ? '' : '.' + theme).toLowerCase(),\n    },\n};\n","import { Value, ValueType } from './value-parser';\n\nexport type TokenDefinition = {\n    value: {\n        /* Value for the base theme */\n        _?: string;\n\n        /* Value for the other themes */\n        [theme: string]: string;\n    };\n\n    /** Type hint. The type is usually inferred from the value. */\n    type?: ValueType;\n\n    /* Single line, plain text recommended */\n    /* Output in the generated files */\n\n    comment?: string;\n\n    /* Multiple lines or paragraphs. Markdown recommended */\n    /* Output in the generated documentation */\n    remarks?: string;\n\n    /* When this token has been deprecated, what replaces it, or when will it be removed. */\n    deprecated?: string;\n};\n\nexport type ValueFormatter = (value: Value) => string;\n\nexport type NameFormatter = (name: string, theme: string) => string;\n\nexport interface RenderFileContext {\n    filepath: string;\n    themes: string[];\n    header: string;\n    definitions: Map<string, TokenDefinition>;\n    rawValues: Map<string, Value>;\n\n    content: string;\n}\n\nexport interface RenderGroupContext extends RenderFileContext {\n    category: string;\n\n    properties: string[];\n    values: Map<string, string>;\n}\n\nexport interface RenderPropertyContext extends RenderGroupContext {\n    token: string;\n    definition: TokenDefinition;\n    theme: string;\n    propertyName: string;\n    propertyValue: string;\n}\n\nexport type Format = {\n    /** One or more format names that this format extends. */\n    extends?: string | string[];\n\n    /** Preferred file extension for the generated file(s) for this format,\n     * for example \".txt\"\n     */\n    ext?: string;\n\n    /** Header included at the begining of generated files, such as a warning about not modifying the file. */\n    fileHeader?: string;\n\n    nameFormatter?: NameFormatter;\n    valueFormatter?: ValueFormatter;\n\n    renderFilename?: ({\n        theme,\n        basename,\n    }: {\n        theme: string;\n        basename: string;\n    }) => string;\n    renderProperty?: (context: RenderPropertyContext) => string;\n    renderGroup?: (context: RenderGroupContext) => string;\n    renderFile?: (context: RenderFileContext) => string;\n};\n\nexport const DEFAULT_FILE_HEADER = `\nThis file was automatically generated by Chromatic.\nDo not edit.\nGenerated ${new Date().toISOString()}\n`;\n","const chalk = require('chalk');\nconst ciInfo = require('ci-info');\n\n//\n// Terminal colors for various kind of messages\n//\nconst tcOrange = '#ffcc00';\nconst tcRed = '#fa2040';\nconst tcBlue = '#6ab3ff';\nconst tcPurple = '#d1d7ff';\n\n/** Do not use fancy color output if the output stream is not a terminal\n * (e.g. if we're redirecting errors to a log file) or when in a CI environment.\n * Note that the debug console in VSCode returns 'undefined' for isTTY.\n */\nlet gUseColor = (process.stdout.isTTY ?? false) && !ciInfo.isCI;\n\nexport const terminal = {\n    useColor: (flag: boolean): void => {\n        gUseColor = flag;\n    },\n    autoFormat: (m: string): string => {\n        return m\n            .replace(/(\"(.*)\")/g, x => {\n                return terminal.string(x.slice(1, -1));\n            })\n            .replace(/(`(.*)`)/g, x => {\n                return terminal.keyword(x);\n            });\n    },\n    success: (m = ''): string => {\n        chalk.green('✔︎   ' + m);\n        return gUseColor ? chalk.bold.green('✔︎   ' + m) : '✔︎   ' + m;\n    },\n    error: (m = ''): string => {\n        return gUseColor\n            ? chalk.hex(tcRed)(chalk.bold('✘   ' + m))\n            : '✘   ' + m;\n    },\n    warning: (m = ''): string => {\n        return gUseColor\n            ? chalk.hex(tcOrange)(chalk.bold('⚠️   ' + m))\n            : '⚠   ' + m;\n    },\n    path: (m = ''): string => {\n        return gUseColor ? chalk.hex(tcBlue).italic(m) : m;\n    },\n    keyword: (m = ''): string => {\n        return gUseColor ? chalk.hex(tcOrange)(m) : m;\n    },\n    string: (m = ''): string => {\n        return gUseColor\n            ? chalk.hex(tcOrange)('\"' + chalk.italic(m) + '\"')\n            : '\"' + m + '\"';\n    },\n    dim: (m = ''): string => {\n        return gUseColor ? chalk.hex('#999')(m) : m;\n    },\n    time: (t = new Date()): string => {\n        return gUseColor\n            ? chalk.hex(tcPurple)(`[${t.toLocaleTimeString()}]`)\n            : '[' + t + ']';\n    },\n    link: (m: string): string => {\n        return gUseColor\n            ? '\\n▷   ' +\n                  chalk.hex(tcPurple)(\n                      'https://github.com/arnog/chromatic/docs/errors/' +\n                          m +\n                          '.md'\n                  )\n            : '\\n▷   https://github.com/arnog/chromatic/docs/errors/' +\n                  m +\n                  '.md';\n    },\n};\n","const colorName = require('color-name');\nconst chroma = require('chroma-js');\n\nimport {\n    throwError,\n    throwErrorWithContext,\n    ErrorCode,\n    SyntaxError,\n} from './errors';\nimport { terminal } from './terminal';\nimport { getSuggestion } from './utils';\n\n// @todo: convert frequency and time (1/s -> Hz)\n// @todo: have a base-font-size property in the tokenfile as well (under global: )\n\nexport type ValueType =\n    | 'string'\n    | 'float'\n    | 'percentage'\n    | 'angle'\n    | 'color'\n    | 'length'\n    | 'time'\n    | 'frequency'\n    | 'array';\n\nexport interface ValueParserOptions {\n    /**\n     * Those are relative units that can't be evaluated statically, as they\n     * depend on the rendering environment (the size of the base font of the\n     * document, the metrics of the current font, the dimension of the view port.\n     * However, it is possible to provide values for those to valueParser,\n     * in which case they will get evaluated.\n     */\n    baseUnits?: {\n        rem?: number;\n        em?: number;\n        ex?: number;\n        ch?: number;\n        vh?: number;\n        vw?: number;\n    };\n    /** When an alias (identifier in {}) is encountered, this function\n     * is called to resolve it.\n     * Return either the resolved value, or a string which is a suggestion\n     * for the best matching identifier.\n     */\n    aliasResolver?: (identifier: string) => Value | string;\n}\n\ntype LengthUnit =\n    | 'px'\n    | 'cm'\n    | 'mm'\n    | 'Q'\n    | 'in'\n    | 'pc'\n    | 'pt'\n    | 'rem'\n    | 'em'\n    | 'ex'\n    | 'ch'\n    | 'vw'\n    | 'vh'\n    | 'vmin'\n    | 'vmax'\n    | 'multi';\n\ntype AngleUnit = 'deg' | 'grad' | 'rad' | 'degree' | 'turn';\n\ntype TimeUnit = 's' | 'ms';\n\ntype FrequencyUnit = 'hz' | 'khz';\n\nfunction clampByte(v: number): number {\n    if (v < 0) return 0;\n    if (v > 255) return 255;\n    return Math.round(v);\n}\n\nfunction hueToRgbChannel(t1: number, t2: number, hue: number): number {\n    if (hue < 0) hue += 6;\n    if (hue >= 6) hue -= 6;\n\n    if (hue < 1) return (t2 - t1) * hue + t1;\n    else if (hue < 3) return t2;\n    else if (hue < 4) return (t2 - t1) * (4 - hue) + t1;\n    else return t1;\n}\n\nfunction hslToRgb(\n    hue: number,\n    sat: number,\n    light: number\n): { r: number; g: number; b: number } {\n    hue = hue / 60.0;\n    const t2 = light <= 0.5 ? light * (sat + 1) : light + sat - light * sat;\n    const t1 = light * 2 - t2;\n    return {\n        r: Math.round(255 * hueToRgbChannel(t1, t2, hue + 2)),\n        g: Math.round(255 * hueToRgbChannel(t1, t2, hue)),\n        b: Math.round(255 * hueToRgbChannel(t1, t2, hue - 2)),\n    };\n}\n\nfunction rgbToHsl(\n    r: number,\n    g: number,\n    b: number\n): { h: number; s: number; l: number } {\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n\n    const delta = max - min;\n    let h: number;\n    let s: number;\n\n    if (max === min) {\n        h = 0;\n    } else if (r === max) {\n        h = (g - b) / delta;\n    } else if (g === max) {\n        h = 2 + (b - r) / delta;\n    } else if (b === max) {\n        h = 4 + (r - g) / delta;\n    }\n\n    h = Math.min(h * 60, 360);\n\n    if (h < 0) {\n        h += 360;\n    }\n\n    const l = (min + max) / 2;\n\n    if (max === min) {\n        s = 0;\n    } else if (l <= 0.5) {\n        s = delta / (max + min);\n    } else {\n        s = delta / (2 - max - min);\n    }\n\n    return { h: h, s: s, l: l };\n}\n\nfunction labToRgb(\n    L: number,\n    aStar: number,\n    bStar: number\n): { r: number; g: number; b: number } {\n    let y = (100 * L + 16) / 116;\n    let x = aStar / 500 + y;\n    let z = y - bStar / 200;\n\n    x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787);\n    y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787);\n    z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787);\n\n    let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    let b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\n\n    return {\n        r: clampByte(r * 255),\n        g: clampByte(g * 255),\n        b: clampByte(b * 255),\n    };\n}\n\n/*\nfunction rgbToLab(\n    r: number,\n    g: number,\n    b: number\n): { L: number; a: number; b: number } {\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n    let x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n    let y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n    let z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n    return { L: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z) };\n}\n*/\n\nfunction hwbToRgb(\n    hue: number,\n    white: number,\n    black: number\n): { r: number; g: number; b: number } {\n    const rgb = hslToRgb(hue, 1, 0.5);\n    const xs = [];\n    xs[0] = rgb.r / 255;\n    xs[1] = rgb.g / 255;\n    xs[2] = rgb.b / 255;\n    const total = white + black;\n    if (total > 1) {\n        white = Number((white / total).toFixed(2));\n        black = Number((black / total).toFixed(2));\n    }\n    for (let i = 0; i < 3; i++) {\n        xs[i] *= 1 - white - black;\n        xs[i] += white;\n        xs[i] = Number(xs[i] * 255);\n    }\n    return { r: xs[0], g: xs[1], b: xs[2] };\n}\n\nfunction parseColorName(\n    name: string\n): { r: number; g: number; b: number; a: number } {\n    const color = colorName[name.toLowerCase()];\n    if (color) {\n        return {\n            r: color[0],\n            g: color[1],\n            b: color[2],\n            a: 1,\n        };\n    }\n\n    return undefined;\n}\n\nfunction parseHex(hex: string): { r: number; g: number; b: number; a: number } {\n    if (!hex) return undefined;\n    if (hex[0] !== '#') return undefined;\n    hex = hex.slice(1);\n    let result;\n    if (hex.length <= 4) {\n        result = {\n            r: parseInt(hex[0] + hex[0], 16),\n            g: parseInt(hex[1] + hex[1], 16),\n            b: parseInt(hex[2] + hex[2], 16),\n        };\n        if (hex.length === 4) {\n            result.a = parseInt(hex[3] + hex[3], 16) / 255;\n        }\n    } else {\n        result = {\n            r: parseInt(hex[0] + hex[1], 16),\n            g: parseInt(hex[2] + hex[3], 16),\n            b: parseInt(hex[4] + hex[5], 16),\n        };\n        if (hex.length === 8) {\n            result.a = parseInt(hex[6] + hex[7], 16) / 255;\n        }\n    }\n    if (result && typeof result.a === 'undefined') result.a = 1.0;\n    return result;\n}\n\nfunction roundTo(num: number, precision: number): number {\n    return (\n        Math.round(num * Math.pow(10, precision) + 1e-14) /\n        Math.pow(10, precision)\n    );\n}\n\nexport class Value {\n    private source = '';\n    css(): string {\n        return '';\n    }\n    type(): ValueType {\n        return undefined;\n    }\n    canonicalScalar(): number {\n        return 0;\n    }\n    getSource(): string {\n        return this.source;\n    }\n    setSource(source: string): void {\n        this.source = source;\n    }\n}\n\nclass Percentage extends Value {\n    value: number; /* [0..100] */\n    constructor(from: number) {\n        super();\n        this.value = from;\n    }\n    css(): string {\n        return roundTo(this.value, 2) + '%';\n    }\n    type(): ValueType {\n        return 'percentage';\n    }\n    canonicalScalar(): number {\n        return this.value / 100;\n    }\n}\n\nclass Angle extends Value {\n    value: number;\n    unit: AngleUnit;\n    constructor(from: number, unit: AngleUnit) {\n        super();\n        this.value = from;\n        this.unit = unit;\n    }\n    css(): string {\n        return roundTo(this.value, 2) + this.unit;\n    }\n    type(): ValueType {\n        return 'angle';\n    }\n    canonicalScalar(): number {\n        return asDegree(this);\n    }\n}\n\ninterface MultiLength {\n    // Absolute canonical length\n    px?: number;\n\n    // Relative lengths\n    em?: number;\n    ex?: number;\n    ch?: number;\n    rem?: number;\n    vw?: number;\n    vh?: number;\n    vmin?: number;\n    vmax?: number;\n}\n\nclass Length extends Value {\n    value: number | MultiLength;\n    unit: LengthUnit;\n    constructor(from: number | MultiLength, unit?: LengthUnit) {\n        super();\n        if (typeof from === 'number') {\n            this.value = from;\n            if (from === 0) {\n                this.unit = 'px';\n            } else {\n                this.unit = unit;\n            }\n        } else if (typeof unit === 'undefined') {\n            const nonZeroKeys: LengthUnit[] = Object.keys(from).filter(\n                x => typeof from[x] === 'number' && from[x] !== 0\n            ) as LengthUnit[];\n            if (nonZeroKeys.length === 0) {\n                // Everything's zero, return the canonical zero length: 0px\n                this.value = 0;\n                this.unit = 'px';\n            } else if (nonZeroKeys.length === 1) {\n                // A single non-zero unit? Return that unit.\n                this.value = from[nonZeroKeys[0]];\n                this.unit = nonZeroKeys[0];\n            } else {\n                this.value = from;\n                this.unit = 'multi';\n            }\n        } else {\n            // Force promotion to multi\n            this.value = from;\n            this.unit = 'multi';\n            console.assert(unit === 'multi');\n        }\n    }\n    css(): string {\n        if (typeof this.value === 'number') {\n            // If it's a number, display \"0\" and \"NaN\" without units\n            return this.value === 0 || isNaN(this.value)\n                ? Number(this.value).toString()\n                : roundTo(this.value, 2) + this.unit;\n        }\n\n        // It's a multi-unit length.\n\n        const result: MultiLength = {};\n        let units = Object.keys(this.value);\n\n        if (units.length > 1) {\n            // It's a multi-unit length, with multiple units\n            // Attempt to simplify it\n            let pxSum = 0;\n            units.forEach(x => {\n                const inPx = asPx(this.value[x], x as LengthUnit);\n                if (!isNaN(inPx)) {\n                    pxSum += inPx;\n                } else if (x !== 'px') {\n                    result[x] = this.value[x];\n                }\n            });\n            if (pxSum !== 0) {\n                result['px'] = pxSum;\n            }\n        } else {\n            result[units[0]] = this.value[units[0]];\n        }\n\n        units = Object.keys(result);\n        if (units.length === 1) {\n            if (units[0] === 'px' && result['px'] === 0) {\n                return '0';\n            }\n            return roundTo(result[units[0]], 2) + units[0];\n        }\n\n        return (\n            'calc(' +\n            units.map(x => Number(result[x]).toString() + x).join(' + ') +\n            ')'\n        );\n    }\n    type(): ValueType {\n        return 'length';\n    }\n    canonicalScalar(): number {\n        return this.unit === 'multi'\n            ? NaN\n            : asPx(this.value as number, this.unit);\n    }\n}\nclass Time extends Value {\n    value: number;\n    unit: TimeUnit;\n    constructor(from: number, unit: TimeUnit) {\n        super();\n        this.value = from;\n        this.unit = unit;\n    }\n    css(): string {\n        return roundTo(this.value, 2) + this.unit;\n    }\n    type(): ValueType {\n        return 'time';\n    }\n    canonicalScalar(): number {\n        return this.unit === 'ms' ? this.value / 1000 : this.value;\n    }\n}\n\nclass Frequency extends Value {\n    value: number;\n    unit: FrequencyUnit;\n    constructor(from: number, unit: FrequencyUnit) {\n        super();\n        this.value = from;\n        this.unit = unit;\n    }\n    css(): string {\n        return roundTo(this.value, 2) + this.unit;\n    }\n    type(): ValueType {\n        return 'frequency';\n    }\n    canonicalScalar(): number {\n        return this.unit === 'khz' ? this.value * 1000 : this.value;\n    }\n}\n\nclass Float extends Value {\n    value: number;\n    constructor(from: number) {\n        super();\n        this.value = from;\n    }\n    css(): string {\n        return Number(this.value).toString();\n    }\n    type(): ValueType {\n        return 'float';\n    }\n    canonicalScalar(): number {\n        return this.value;\n    }\n}\n\nexport class StringValue extends Value {\n    value: string;\n    constructor(from: string) {\n        super();\n        this.value = from;\n    }\n    css(quoteLiteral = ''): string {\n        return quoteLiteral + this.value + quoteLiteral;\n    }\n    type(): ValueType {\n        return 'string';\n    }\n    canonicalScalar(): number {\n        return parseFloat(this.value);\n    }\n}\n\nexport class Color extends Value {\n    r?: number; /* [0..255] */\n    g?: number; /* [0..255] */\n    b?: number; /* [0..255] */\n    l?: number;\n    h?: number; /* [0..360] */\n    s?: number;\n    a: number; /* [0..1] */\n    constructor(from: object | string) {\n        super();\n        if (typeof from === 'string') {\n            if (from.toLowerCase() === 'transparent') {\n                [this.r, this.g, this.b, this.a] = [0, 0, 0, 0];\n                [this.h, this.s, this.l] = [0, 0, 0];\n            } else {\n                const rgb = parseHex(from) || parseColorName(from);\n                if (!rgb) throw new Error();\n                Object.assign(this, rgb);\n                Object.assign(this, rgbToHsl(this.r, this.g, this.b));\n            }\n        } else {\n            Object.assign(this, from);\n            // Normalize the RGB/HSL values so that a color value\n            // always has r, g, b, h, s, l and a.\n            if (typeof this.r === 'number') {\n                // RGB data\n                Object.assign(this, rgbToHsl(this.r, this.g, this.b));\n            } else {\n                // HSL data\n                console.assert(typeof this.h === 'number');\n                this.h = (this.h + 360) % 360;\n                this.s = Math.max(0, Math.min(1.0, this.s));\n                this.l = Math.max(0, Math.min(1.0, this.l));\n                Object.assign(this, hslToRgb(this.h, this.s, this.l));\n            }\n        }\n        if (typeof this.a !== 'number') {\n            this.a = 1.0;\n        }\n    }\n    type(): ValueType {\n        return 'color';\n    }\n    opaque(): Color {\n        return new Color({ r: this.r, g: this.g, b: this.b });\n    }\n    luma(): number {\n        // Source: https://www.w3.org/TR/WCAG20/#relativeluminancedef\n        let r = this.r / 255.0;\n        let g = this.g / 255.0;\n        let b = this.b / 255.0;\n        r = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n        g = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n        b = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    }\n    hex(): string {\n        let hexString = (\n            (1 << 24) +\n            (clampByte(this.r) << 16) +\n            (clampByte(this.g) << 8) +\n            clampByte(this.b)\n        )\n            .toString(16)\n            .slice(1);\n\n        if (this.a < 1.0) {\n            hexString += ('00' + Math.round(this.a * 255).toString(16)).slice(\n                -2\n            );\n        }\n\n        // Compress hex from hex-6 or hex-8 to hex-3 or hex-4 if possible\n        if (\n            hexString[0] === hexString[1] &&\n            hexString[2] === hexString[3] &&\n            hexString[4] === hexString[5] &&\n            hexString[6] === hexString[7]\n        ) {\n            hexString =\n                hexString[0] +\n                hexString[2] +\n                hexString[4] +\n                (this.a < 1.0 ? hexString[6] : '');\n        }\n\n        return '#' + hexString;\n    }\n    rgb(): string {\n        return `rgb(${this.r}, ${this.g}, ${this.b}${\n            this.a < 1.0 ? ', ' + Number(100 * this.a).toFixed(0) + '%' : ''\n        })`;\n    }\n    hsl(): string {\n        return `hsl(${this.h}deg, ${this.s}%, ${this.l}%, ${\n            this.a < 1.0 ? ', ' + Number(100 * this.a).toFixed(0) + '%' : ''\n        })`;\n    }\n    css(): string {\n        if (this.r === 0 && this.g === 0 && this.b === 0 && this.a === 0)\n            return 'transparent';\n        if (this.a < 1) {\n            return this.rgb();\n        }\n        return this.hex();\n    }\n    canonicalScalar(): number {\n        return this.luma();\n    }\n}\n\nclass ArrayValue extends Value {\n    value: Value[];\n    constructor(from: Value[]) {\n        super();\n        this.value = from.map(x => makeValueFrom(x));\n    }\n    get(index: number): Value {\n        return this.value[index];\n    }\n    type(): ValueType {\n        return 'array';\n    }\n    css(): string {\n        return '\"[' + this.value.map(x => x.css()).join(', ') + ']\"';\n    }\n}\n\nfunction isFloat(arg: Value): arg is Float {\n    return arg instanceof Float;\n}\n\nfunction assertFloat(arg: Value): asserts arg is Float {\n    console.assert(arg instanceof Float);\n}\n\nfunction assertFloatOrPercentage(arg: Value): asserts arg is Float {\n    console.assert(arg instanceof Float || arg instanceof Percentage);\n}\n\nfunction assertLength(arg: Value): asserts arg is Length {\n    console.assert(arg instanceof Length);\n}\n\nfunction isColor(arg: Value): arg is Percentage {\n    return arg instanceof Color;\n}\n\nfunction isPercentage(arg: Value): arg is Percentage {\n    return arg instanceof Percentage;\n}\n\nfunction isLength(arg: Value): arg is Length {\n    return arg instanceof Length;\n}\n\nfunction isString(arg: Value): arg is StringValue {\n    return arg instanceof StringValue;\n}\n\nfunction isAngle(arg: Value): arg is Angle {\n    return arg instanceof Angle;\n}\n\nfunction isTime(arg: Value): arg is Time {\n    return arg instanceof Time;\n}\n\nfunction isFrequency(arg: Value): arg is Frequency {\n    return arg instanceof Frequency;\n}\n\nfunction isZero(arg: Value): arg is Float {\n    return arg instanceof Float && arg.value === 0;\n}\n\nexport function makeValueFrom(from: {\n    type: () => ValueType;\n    [key: string]: any;\n}): Value {\n    switch (from.type()) {\n        case 'color':\n            return new Color(from);\n        case 'frequency':\n            return new Frequency(from.value, from.unit);\n        case 'time':\n            return new Time(from.value, from.unit);\n        case 'angle':\n            return new Angle(from.value, from.unit);\n        case 'string':\n            return new StringValue(from.value);\n        case 'length':\n            return new Length(from.value, from.unit);\n        case 'percentage':\n            return new Percentage(from.value);\n        case 'float':\n            return new Float(from.value);\n        case 'array':\n            return new ArrayValue(from.value.map(makeValueFrom));\n        default:\n            console.error('Unknown value type');\n    }\n    return undefined;\n}\n\n/**\n * Convert a value to a color object.\n *\n * @param {object|string} value - hex string, color name or object with partial\n *\n */\n\nfunction asColor(value: object | string): Color {\n    if (!value) return undefined;\n    let result: Color;\n    try {\n        result = new Color(value);\n    } catch (_err) {\n        result = undefined;\n    }\n    return result;\n}\n\nfunction asDecimalByte(value: Value): number {\n    if (isPercentage(value)) {\n        return Math.round((255 * value.value) / 100);\n    }\n    assertFloat(value);\n    return Math.round(value.value);\n}\n\nfunction asInteger(value: Value, defaultValue?: number): number {\n    if (isFloat(value)) {\n        return Math.round(value.value);\n    }\n    if (typeof defaultValue === 'undefined') assertFloat(value);\n    return defaultValue;\n}\n\nfunction asDecimalRatio(value: Value, defaultValue?: number | null): number {\n    if (isPercentage(value)) {\n        return value.value / 100;\n    } else if (isFloat(value)) {\n        return value.value;\n    }\n\n    if (typeof defaultValue === 'undefined') assertFloatOrPercentage(value);\n    return defaultValue;\n}\n\nfunction asDegree(value: Value): number {\n    // https://drafts.csswg.org/css-values-3/#angle-value\n\n    if (isAngle(value)) {\n        if (value.unit === 'deg') {\n            return value.value;\n        } else if (value.unit === 'rad') {\n            return (value.value * 180) / Math.PI;\n        } else if (value.unit === 'grad') {\n            return (value.value * 180) / 200;\n        } else if (value.unit === 'turn') {\n            return value.value * 360.0;\n        }\n        throwError(ErrorCode.UnknownUnit, value.unit);\n    } else {\n        assertFloat(value);\n        // Degree is the canonical unit for angles\n        return value.value;\n    }\n}\n\nfunction asPx(\n    value: number | MultiLength,\n    unit: LengthUnit,\n    options?: ValueParserOptions\n): number {\n    // See https://drafts.csswg.org/css-values-3/#lengths\n    if (typeof value !== 'number') {\n        console.assert(unit === 'multi');\n        let pxSum = value['px'] ?? 0;\n        Object.keys(value).forEach(x => {\n            const inPx = asPx(this.value[x], x as LengthUnit, options);\n            if (isNaN(inPx)) return NaN;\n            pxSum += pxSum;\n        });\n        return pxSum;\n    }\n    if (unit === 'px') {\n        return value;\n    } else if (unit === 'cm') {\n        return (value * 96.0) / 2.54;\n    } else if (unit === 'mm') {\n        return (value * 96.0) / 25.4;\n    } else if (unit === 'Q') {\n        return (value * 96.0) / 2.54 / 40.0;\n    } else if (unit === 'in') {\n        return value * 96.0;\n    } else if (unit === 'pc') {\n        return value * 16.0;\n    } else if (unit === 'pt') {\n        return (value * 96.0) / 72.0;\n    }\n    let base: number;\n    if (unit === 'vmin') {\n        base = Math.min(\n            options?.baseUnits?.vh ?? NaN,\n            options?.baseUnits?.vw ?? NaN\n        );\n    } else if (unit === 'vmax') {\n        base = Math.max(\n            options?.baseUnits?.vh ?? NaN,\n            options?.baseUnits?.vw ?? NaN\n        );\n    } else {\n        base = options?.baseUnits?.[unit] ?? NaN;\n    }\n\n    return base * value;\n}\n\nfunction asPercent(value: Value): number {\n    if (isPercentage(value)) {\n        return value.value / 100;\n    }\n    assertFloat(value);\n    return value.value;\n}\n\nfunction asString(value: Value, defaultValue: string): string {\n    if (!isString(value)) {\n        return defaultValue;\n    }\n    return value.value;\n}\n\nfunction compareValue(a: Value, b: Value): number {\n    // @todo: compare strings (asCanonicalString())\n    return b.canonicalScalar() - a.canonicalScalar();\n}\n\nfunction promoteToMulti(value: Length | Float): Length {\n    if (isFloat(value)) {\n        return new Length({ px: value.value }, 'multi');\n    }\n    if (value.unit === 'multi') return value;\n\n    const newValue: MultiLength = {};\n    newValue[value.unit] = value.value;\n\n    return new Length(newValue, 'multi');\n}\n\nconst whiteColor = new Color('#fff');\nconst blackColor = new Color('#000');\n\nexport function scaleColor(\n    arg1: Value,\n    arg2?: Value,\n    arg3?: Value,\n    arg4?: Value\n): ArrayValue {\n    // For an analysis of various ramps, see https://uxplanet.org/designing-systematic-colors-b5d2605b15c\n    let c1 = new Color('#fff');\n    let c2: Color;\n    let c3 = new Color('#000');\n    let n = 10;\n    if (arg3?.type() === 'color') {\n        c1 = asColor(arg1);\n        c2 = asColor(arg2);\n        c3 = asColor(arg3);\n        n = asInteger(arg4, 10);\n    } else if (arg2?.type() === 'color') {\n        c1 = asColor(arg1);\n        c2 = asColor(arg2);\n        c3 = asColor(arg2);\n        n = asInteger(arg3, 10);\n    } else if (arg1.type() === 'color') {\n        c2 = asColor(arg1);\n        c3 = new Color({\n            h: c2.h >= 60 && c2.h <= 240 ? c2.h + 30 : c2.h - 30,\n            s: c2.s,\n            l: 0.35,\n        });\n        n = asInteger(arg2, 10);\n        const mode = new StringValue('rgb');\n        return new ArrayValue([\n            FUNCTIONS.mix(c1, c2, new Float(0.12), mode),\n            FUNCTIONS.mix(c1, c2, new Float(0.3), mode),\n            FUNCTIONS.mix(c1, c2, new Float(0.5), mode),\n            FUNCTIONS.mix(c1, c2, new Float(0.7), mode),\n            FUNCTIONS.mix(c1, c2, new Float(0.85), mode),\n            c2,\n            FUNCTIONS.mix(c3, c2, new Float(0.85), mode),\n            FUNCTIONS.mix(c3, c2, new Float(0.7), mode),\n            FUNCTIONS.mix(c3, c2, new Float(0.5), mode),\n            FUNCTIONS.mix(c3, c2, new Float(0.2), mode),\n            // FUNCTIONS.darken(c2, new Float(0.06), mode),\n            // FUNCTIONS.darken(c2, new Float(0.12), mode),\n            // FUNCTIONS.darken(c2, new Float(0.18), mode),\n            // FUNCTIONS.darken(c2, new Float(0.24), mode),\n        ]);\n    }\n\n    if (!c1 || !c2 || !c3) return undefined;\n\n    const colors = chroma\n        .scale(\n            // chroma.bezier([\n            //     c1.opaque().hex(),\n            //     c2.opaque().hex(),\n            //     c3.opaque().hex(),\n            // ])\n            [c1.opaque().hex(), c2.opaque().hex(), c3.opaque().hex()]\n        )\n        .mode('lab')\n        .correctLightness()\n        .colors(n + 1);\n\n    return new ArrayValue(colors.map(x => new Color(x)));\n}\n\n// Definition of the functions that can be used in the expression\n// of token values.\nlet FUNCTIONS: {\n    [key: string]: (...args: Value[]) => Value;\n} = {};\nFUNCTIONS = {\n    /** The calc() function is a no-op, but it's there for compatibility with CSS */\n    calc: (x: Value): Value => x,\n    /** r, g, b: a value as a number in [0...255] or as a percentage. a: a number in [0...1] or a percentage */\n    rgb: (r: Value, g: Value, b: Value, a?: Value): Color => {\n        return new Color({\n            r: asDecimalByte(r),\n            g: asDecimalByte(g),\n            b: asDecimalByte(b),\n            a: asDecimalRatio(a, 1.0),\n        });\n    },\n    hsl: (h: Value, s: Value, l: Value, a?: Value): Color => {\n        return new Color({\n            h: asDegree(h),\n            s: asPercent(s),\n            l: asPercent(l),\n            a: asDecimalRatio(a, 1.0),\n        });\n    },\n    hsv: (h: Value, sat: Value, val: Value, a?: Value): Color => {\n        let s = asPercent(sat);\n        const v = asPercent(val);\n\n        const l = ((2 - s) * v) / 2;\n\n        if (l != 0) {\n            if (l == 1) {\n                s = 0;\n            } else if (l < 0.5) {\n                s = (s * v) / (l * 2);\n            } else {\n                s = (s * v) / (2 - l * 2);\n            }\n        }\n        return new Color({\n            h: asDegree(h),\n            s: s,\n            l: l,\n            a: asDecimalRatio(a, 1.0),\n        });\n    },\n    hwb: (h: Value, w: Value, b: Value, a?: Value): Color => {\n        return new Color({\n            a: asDecimalRatio(a, 1.0),\n            ...hwbToRgb(asDegree(h), asPercent(w), asPercent(b)),\n        });\n    },\n    lab: (l: Value, a: Value, b: Value, alpha?: Value): Color => {\n        return new Color({\n            a: asDecimalRatio(alpha, 1.0),\n            ...labToRgb(asPercent(l), asDecimalRatio(a), asDecimalRatio(b)),\n        });\n    },\n    gray: (g: Value, alpha: Value): Color => {\n        return new Color({\n            a: asDecimalRatio(alpha, 1.0),\n            ...labToRgb(asPercent(g), 0, 0),\n        });\n    },\n    min: (a: Value, b: Value): Value => {\n        return compareValue(a, b) < 0 ? a : b;\n    },\n    max: (a: Value, b: Value): Value => {\n        return compareValue(a, b) < 0 ? b : a;\n    },\n    clamp(a: Value, b: Value, c: Value): Value {\n        return compareValue(b, a) < 0 ? a : compareValue(b, c) > 0 ? c : b;\n    },\n    mix: (c1: Value, c2: Value, weight: Value, model?: Value): Color => {\n        // @todo: support additional color models. See color-convert npm module.\n        const modelName = asString(model, 'hsl').toLowerCase();\n        const color1 = asColor(c1);\n        if (!color1) return undefined;\n        const color2 = asColor(c2);\n        if (!color2) return color1;\n\n        const w = asDecimalRatio(weight, 0.5);\n\n        let alpha = typeof color2.a === 'number' ? color2.a : 1.0;\n        alpha =\n            alpha +\n            ((typeof color1.a === 'number' ? color2.a : 1.0) - alpha) * w;\n        if (modelName === 'rgb') {\n            return new Color({\n                r: color1.r + (color2.r - color1.r) * w,\n                g: color1.g + (color2.g - color1.g) * w,\n                b: color1.b + (color2.b - color1.b) * w,\n                a: alpha,\n            });\n        } else if (modelName === 'hsl') {\n            return new Color({\n                h: color1.h + (color2.h - color1.h) * w,\n                s: color1.s + (color2.s - color1.s) * w,\n                l: color1.l + (color2.l - color1.l) * w,\n                a: alpha,\n            });\n        }\n    },\n    saturate: (c: Value, v: Value): Color => {\n        const color = asColor(c);\n        if (!color) return undefined;\n        return new Color({\n            h: color.h,\n            s: color.s + (1.0 - color.s) * asDecimalRatio(v, 0.1),\n            l: color.l,\n            a: color.a,\n        });\n    },\n    desaturate: (c: Value, v: Value): Color => {\n        const color = asColor(c);\n        if (!color) return undefined;\n        return new Color({\n            h: color.h,\n            s: color.s - color.s * asDecimalRatio(v, 0.1),\n            l: color.l,\n            a: color.a,\n        });\n    },\n    lighten: (c: Value, v: Value): Color => {\n        const color = asColor(c);\n        if (!color) return undefined;\n        return new Color({\n            h: color.h,\n            s: color.s,\n            l: color.l + (1.0 - color.l) * asDecimalRatio(v, 0.1),\n            a: color.a,\n        });\n    },\n    darken: (c: Value, v: Value): Color => {\n        const color = asColor(c);\n        if (!color) return undefined;\n        return new Color({\n            h: color.h,\n            s: color.s,\n            l: color.l - color.l * asDecimalRatio(v, 0.1),\n            a: color.a,\n        });\n    },\n    rotateHue: (c: Value, v: Value): Color => {\n        const color = asColor(c);\n        if (color) {\n            if (!v || (!isAngle(v) && !isFloat(v))) {\n                return color;\n            } else {\n                return new Color({\n                    h: (color.h + asDegree(v) + 360) % 360,\n                    s: color.s,\n                    l: color.l,\n                    a: color.a,\n                });\n            }\n        }\n        return undefined;\n    },\n    complement: (c: Value): Color => {\n        const color = asColor(c);\n        if (color) {\n            return new Color({\n                h: (color.h + 180) % 360,\n                s: color.s,\n                l: color.l,\n                a: color.a,\n            });\n        }\n        return undefined;\n    },\n    /**\n     * Return either dark (default #000) or light (default #fff) depending on\n     * the contrast ratio (as per WCAG 2.0 spec)\n     * WCAG 2.0\n     * - AA\n     *     - small text: contrast ratio > 4.5:1\n     *     - large text (18px, bold): contrast ratio > 3.1\n     * - AAA\n     *     - small text: contrast ratio > 7:1\n     *     - large text (18px, bold): contrast ratio > 4.5.1\n     */\n    contrast: (base: Value, dark: Value, light: Value): Color => {\n        const baseColor = asColor(base);\n        const darkColor = asColor(dark) || blackColor;\n        const lightColor = asColor(light) || whiteColor;\n\n        let darkContrast, lightContrast;\n\n        // Calculate contrast ratios for each color\n        // See https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n        const baseLuma = baseColor.luma();\n        const darkLuma = darkColor.luma();\n        const lightLuma = lightColor.luma();\n        if (baseLuma > darkLuma) {\n            darkContrast = (baseLuma + 0.05) / (darkLuma + 0.05);\n        } else {\n            darkContrast = (darkLuma + 0.05) / (baseLuma + 0.05);\n        }\n        if (baseLuma > lightLuma) {\n            lightContrast = (baseLuma + 0.05) / (lightLuma + 0.05);\n        } else {\n            lightContrast = (lightLuma + 0.05) / (baseLuma + 0.05);\n        }\n\n        return darkContrast > lightContrast ? darkColor : lightColor;\n    },\n    rgba: (r, g, b, a): Value => FUNCTIONS.rgb(r, g, b, a),\n    hsla: (h, s, l, a): Value => FUNCTIONS.hsl(h, s, l, a),\n    tint: (c: Value, w: Value): Color =>\n        FUNCTIONS.mix(whiteColor, c, w ?? new Float(0.1)) as Color,\n    shade: (c: Value, w: Value): Color =>\n        FUNCTIONS.mix(blackColor, c, w ?? new Float(0.1)) as Color,\n    scale: (arg1: Value, arg2: Value, arg3: Value, arg4: Value): ArrayValue => {\n        return scaleColor(arg1, arg2, arg3, arg4);\n    },\n};\n\n/* Functions that take a \"color\" argument list */\n/* Which includes either space or comma as a separator, and \"/\" for alpha */\nconst colorFunctions = ['rgb', 'rgba', 'hsl', 'hsla', 'hwb', 'grey', 'lab'];\n\nconst FUNCTION_ARGUMENTS = {\n    calc: 'any',\n    rgb:\n        'float|percentage, float|percentage, float|percentage,float|percentage|none',\n    rgba:\n        'float|percentage, float|percentage, float|percentage,float|percentage|none',\n    hsl:\n        'float|angle, float|percentage, float|percentage, float|percentage|none',\n    hsla:\n        'float|angle, float|percentage, float|percentage, float|percentage|none',\n    hsv:\n        'float|angle, float|percentage, float|percentage, float|percentage|none',\n    hwb:\n        'float|angle, float|percentage, float|percentage, float|percentage|none',\n    // lab: 'float|percentage, float, float, float|percentage|none',\n    gray: 'float|percentage, float|percentage|none',\n    min: 'any, any',\n    max: 'any, any',\n    clamp: 'any, any, any',\n    mix: 'color, color, float|percentage|none, string|none',\n    saturate: 'color, float|percentage|none',\n    desaturate: 'color, float|percentage|none',\n    lighten: 'color, float|percentage|none',\n    darken: 'color, float|percentage|none',\n    rotateHue: 'color, angle|float|none',\n    complement: 'color',\n    contrast: 'color, color|none, color|none',\n\n    tint: 'color, float|percentage|none',\n    shade: 'color, float|percentage|none',\n};\n\nfunction validateArguments(fn: string, args: any[]): void {\n    const expectedArguments = FUNCTION_ARGUMENTS[fn]\n        ?.split(',')\n        .map(x => x.trim());\n    if (expectedArguments) {\n        expectedArguments.forEach((x: string, i: number) => {\n            const types = x.split('|').map(x => x.trim());\n\n            if (!types.includes('none') && !args[i]) {\n                throw new SyntaxError(\n                    ErrorCode.MissingArgument,\n                    String(i + 1),\n                    fn,\n                    types.join(', ')\n                );\n            }\n\n            if (\n                args[i] &&\n                !types.includes('any') &&\n                !types.includes(args[i]?.type())\n            ) {\n                throw new SyntaxError(\n                    ErrorCode.ExpectedArgument,\n                    String(i + 1),\n                    fn,\n                    types.join(', ')\n                );\n            }\n        });\n        if (args.length > expectedArguments.length) {\n            throw new SyntaxError(\n                ErrorCode.TooManyArguments,\n                fn,\n                expectedArguments.join(', ')\n            );\n        }\n    }\n}\n\nclass Stream {\n    /**\n     * @param {string} s - A token value expression\n     * @param {object} options\n     * @param {number} \"base-font-size\" - The number of pixels of 1rem.\n     */\n    s = '';\n    index = 0;\n    options: ValueParserOptions = {};\n    constructor(s: string, options: ValueParserOptions = {}) {\n        this.s = s;\n        this.index = 0;\n        this.options = options;\n    }\n    isEOF(): boolean {\n        return this.index >= this.s.length;\n    }\n    lookAhead(n: number): string {\n        return this.s.slice(this.index, this.index + n);\n    }\n\n    skipWhiteSpace(): void {\n        this.match(/^\\s*/);\n    }\n    match(target: string): boolean;\n    match(target: RegExp): string;\n    match(target: string | RegExp): string | boolean {\n        if (typeof target === 'string') {\n            if (this.lookAhead(target.length) === target) {\n                this.index += target.length;\n                return target;\n            }\n        } else {\n            const m = this.s.slice(this.index).match(target);\n            if (m && m[0]) {\n                this.index += m[0].length;\n                return m[1] || true;\n            }\n        }\n        return undefined;\n    }\n\n    error(code: ErrorCode, ...args: string[]): void {\n        const prefix = this.s.slice(0, this.index).match(/^(.*)/)?.[1] ?? '';\n        const suffix = this.s.slice(this.index).match(/(.*)$/)?.[1] ?? '';\n        throwErrorWithContext(\n            [prefix + terminal.dim(suffix), ' '.repeat(prefix.length) + '⇧'],\n            code,\n            ...args\n        );\n    }\n\n    /** Apply an arithmetic operation when at least one of the operands is a Length\n     *\n     */\n    applyOpToLength(\n        op: string,\n        lhs: Length | Float,\n        rhs: Length | Float\n    ): Value {\n        if (isFloat(lhs) && op === '/') this.error(ErrorCode.InvalidOperand);\n        if (!isFloat(lhs) && !isFloat(rhs) && op === '*')\n            this.error(ErrorCode.InvalidOperand);\n\n        const opFn = {\n            '+': (a: any, b: any): any => a + b,\n            '-': (a: any, b: any): any => a - b,\n            '*': (a: any, b: any): any => a * b,\n            '/': (a: any, b: any): any => a / b,\n        }[op];\n\n        if (isFloat(lhs)) {\n            assertLength(rhs);\n            if (rhs.unit === 'multi') {\n                const multiLength = {};\n                Object.keys(rhs.value as MultiLength).forEach(unit => {\n                    multiLength[unit] = opFn(lhs.value, rhs.value[unit]);\n                });\n                return new Length(multiLength);\n            }\n            return new Length(opFn(lhs.value, rhs.value), rhs.unit);\n        }\n        if (isFloat(rhs)) {\n            if (typeof lhs.value === 'number') {\n                return new Length(opFn(lhs.value, rhs.value), lhs.unit);\n            }\n            const multiLength = {};\n            Object.keys(lhs.value as MultiLength).forEach(unit => {\n                multiLength[unit] = opFn(lhs.value[unit], rhs.value);\n            });\n            return new Length(multiLength);\n        }\n        // We've dealt with the case where one of the two operand is a float.\n        // Now, both operands are Length\n        if (op === '/') {\n            if (lhs.unit === 'multi' || rhs.unit === 'multi') {\n                this.error(ErrorCode.InvalidOperand);\n            }\n\n            if (lhs.unit === rhs.unit) {\n                // If the units are the same, we can calculate the result\n                // even if the units are relative (em, vh, etc...)\n                return new Float((lhs.value as number) / (rhs.value as number));\n            } else {\n                // The units are not the same. Attempt to conver them to a scalar\n                return new Float(lhs.canonicalScalar() / rhs.canonicalScalar());\n            }\n        }\n        // Normalize them both to multi-units\n        const lhsMulti = promoteToMulti(lhs);\n        const rhsMulti = promoteToMulti(rhs);\n\n        // Apply the operation on the union of both operands\n        const multiLength = {};\n        [\n            ...Object.keys(lhsMulti.value as MultiLength),\n            ...Object.keys(rhsMulti.value as MultiLength),\n        ].forEach(unit => {\n            if (typeof rhsMulti.value[unit] === 'undefined') {\n                multiLength[unit] = lhsMulti.value[unit];\n            } else if (typeof lhsMulti.value[unit] === 'undefined') {\n                multiLength[unit] = rhsMulti.value[unit];\n            } else {\n                multiLength[unit] = opFn(\n                    lhsMulti.value[unit],\n                    rhsMulti.value[unit]\n                );\n            }\n        });\n        return new Length(multiLength);\n    }\n\n    parseUnit(num: number): Value {\n        // Check if a number (or group) is followed (immediately) by a unit\n        if (this.match('%')) {\n            return new Percentage(num);\n        }\n        let unit = this.match(\n            /^(em|ex|ch|rem|vw|vh|vmin|vmax|px|cm|mm|in|pt|pc|Q)/\n        );\n        if (unit) {\n            return new Length(num, unit as LengthUnit);\n        }\n        unit = this.match(/^(deg|°|rad|grad|turn)/);\n        if (unit) {\n            return new Angle(num, (unit === '°' ? 'deg' : unit) as AngleUnit);\n        }\n        unit = this.match(/^(ms|s)/);\n        if (unit) {\n            return new Time(num, unit as TimeUnit);\n        }\n        unit = this.match(/^(khz|hz|kHz|Hz)/);\n        if (unit) {\n            return new Frequency(num, unit.toLowerCase() as FrequencyUnit);\n        }\n        unit = this.match(/^([a-zA-Z]+)/);\n        if (unit) {\n            this.error(ErrorCode.UnknownUnit, unit);\n        }\n        return new Float(num);\n    }\n\n    parseIndex(v: Value): Value {\n        let result = v;\n        if (this.match('[')) {\n            if (v.type() !== 'array') {\n                this.error(ErrorCode.UnexpectedOpenBracket);\n            } else {\n                const index = asInteger(this.parseExpression(), NaN);\n                if (isNaN(index)) this.error(ErrorCode.ExpectedIntegerIndex);\n                result = (v as ArrayValue).get(index);\n                this.skipWhiteSpace();\n                if (!this.match(']')) {\n                    this.error(ErrorCode.ExpectedCloseBracket);\n                }\n            }\n        }\n        return result;\n    }\n\n    parseLiteral(): Value {\n        let result: Value;\n        const saveIndex = this.index;\n        const op = this.match(/^\\s*([+\\-])\\s*/);\n        if (op) {\n            const operand = this.parseLiteral();\n            if (op === '-') {\n                // Unary operator\n                if (isPercentage(operand)) {\n                    return new Percentage(-100 * asPercent(operand));\n                }\n                if (isFloat(operand)) {\n                    return new Float(-operand.value);\n                }\n                if (isAngle(operand)) {\n                    return new Angle(-operand.value, operand.unit);\n                }\n                if (isLength(operand)) {\n                    return this.applyOpToLength(\n                        '-',\n                        new Length(0, 'px'),\n                        operand\n                    );\n                }\n                this.error(ErrorCode.InvalidUnaryOperand);\n            }\n            return operand;\n        }\n\n        const num = this.match(/^([0-9]*\\.[0-9]+|\\.?[0-9]+)/);\n        if (num) {\n            result = this.parseUnit(parseFloat(num));\n        }\n\n        if (!result && this.match('[')) {\n            // It's an array litteral\n            const array = [];\n            while (this.lookAhead(1) !== ']' && !this.isEOF()) {\n                const element = this.parseExpression();\n                if (!element) {\n                    this.error(ErrorCode.SyntaxError);\n                }\n                array.push(element);\n                this.match(/^(\\s*,?|\\s+)/);\n            }\n\n            if (this.isEOF()) {\n                this.error(ErrorCode.ExpectedCloseBracket);\n            }\n            this.match(']');\n            return new ArrayValue(array);\n        }\n\n        if (!result && this.match('\"')) {\n            // It's a string\n            let s = '';\n            while (this.lookAhead(1) !== '\"' && !this.isEOF()) {\n                if (this.lookAhead(1) === '\\\\') {\n                    // Escape character\n                    s += this.s[this.index + 1];\n                    this.index += 2;\n                } else {\n                    s += this.s[this.index];\n                    this.index += 1;\n                }\n            }\n\n            if (this.isEOF()) {\n                this.error(ErrorCode.ExpectedQuote);\n            }\n            this.match('\"');\n            return new StringValue(s);\n        }\n\n        if (!result && this.match('{')) {\n            // It's an alias\n            const identifier = this.match(/^([a-zA-Z0-9\\._-]+)/);\n            if (identifier) {\n                let alias = this.options?.aliasResolver(identifier);\n                if (typeof alias === 'string') {\n                    // If that didn't work, try an implicit color scale...\n                    // e.g. \"red-200\"\n                    const m = identifier.match(/^(.+)-([0-9]{2,3})$/);\n                    if (m) {\n                        const color = this.options?.aliasResolver(m[1]);\n                        if (typeof color !== 'string' && isColor(color)) {\n                            const index = Math.round(parseInt(m[2]) / 100);\n\n                            alias = scaleColor(color)?.get(index);\n                        } else if (typeof color === 'string') {\n                            this.error(ErrorCode.UnknownToken, m[1], color);\n                        } else this.error(ErrorCode.InvalidOperand);\n                    }\n                }\n                if (typeof alias === 'string') {\n                    this.error(ErrorCode.UnknownToken, identifier, alias);\n                }\n                result = alias as Value;\n                if (result) {\n                    // Clone the result of the alias, since we'll need to change\n                    // the source\n                    result = makeValueFrom(result);\n                    result.setSource('{' + identifier + '}');\n                }\n            }\n            this.match('}');\n        }\n\n        if (!result) {\n            // Attempt to parse a color as a hex value\n            result = asColor(this.match(/^\\s*(#[0-9a-fA-F]{3,8})/));\n        }\n        if (!result) {\n            // Backtrack and attempt to parse as a color name\n            this.index = saveIndex;\n            result = asColor(this.match(/^\\s*([a-zA-Z]+)/));\n        }\n        if (!result) {\n            // Backtrack\n            this.index = saveIndex;\n        }\n        return result;\n    }\n\n    /* Argument to color functions (rgb, hsl, etc...) have a bit of \n    a peculiar syntax. The arguments can be either comma or space delimited, \n    and the last one (the opacity) can be space, comma or \"/\". \n    And it's optional */\n    parseColorArguments(): (Value | Value)[] {\n        const result: (Value | Value)[] = [];\n\n        this.skipWhiteSpace();\n        if (!this.match('(')) return undefined;\n\n        let arg = this.parseExpression();\n        if (arg) {\n            result.push(arg);\n\n            if (!this.match(/^(\\s*,?|\\s+)/)) {\n                this.match(')');\n                return result;\n            }\n\n            arg = this.parseExpression();\n            if (arg) {\n                result.push(arg);\n\n                if (!this.match(/^(\\s*,?|\\s+)/)) {\n                    this.match(')');\n                    return result;\n                }\n\n                arg = this.parseExpression();\n                if (arg) {\n                    result.push(arg);\n\n                    // Last argument (opacity) can be separated with a \"slash\"\n                    if (!this.match(/^(\\s*,?|\\s+|\\s*\\/)/)) {\n                        this.match(')');\n                        return result;\n                    }\n\n                    arg = this.parseExpression();\n                    if (arg) {\n                        result.push(arg);\n                    }\n                }\n            }\n        }\n\n        this.match(')');\n\n        return result;\n    }\n\n    parseArguments(): Value[] {\n        this.skipWhiteSpace();\n        if (!this.match('(')) return undefined;\n\n        const result = [];\n        while (this.lookAhead(1) !== ')' && !this.isEOF()) {\n            const argument = this.parseExpression();\n            if (!argument) {\n                this.error(ErrorCode.SyntaxError);\n            }\n            result.push(argument);\n            this.match(/^(\\s*,?|\\s+)/);\n        }\n        if (this.isEOF()) {\n            this.error(ErrorCode.ExpectedCloseParen);\n        }\n        this.match(')');\n\n        return result;\n    }\n\n    parseCall(): Value {\n        const saveIndex = this.index;\n        const fn = this.match(/^([a-zA-Z\\-]+)/);\n        if (fn) {\n            if (!FUNCTIONS[fn]) {\n                if (this.lookAhead(1) === '(') {\n                    this.error(\n                        ErrorCode.UnknownFunction,\n                        fn,\n                        getSuggestion(fn, FUNCTIONS)\n                    );\n                }\n            } else {\n                const args = colorFunctions.includes(fn)\n                    ? this.parseColorArguments()\n                    : this.parseArguments();\n                if (args) {\n                    try {\n                        validateArguments(fn, args);\n                    } catch (err) {\n                        if (err.code) {\n                            this.error(err.code, ...err.args);\n                        } else {\n                            this.error(err.message);\n                        }\n                    }\n                    return FUNCTIONS[fn](...args);\n                } else {\n                    this.error(ErrorCode.SyntaxError);\n                }\n            }\n        }\n        // Backtrack\n        this.index = saveIndex;\n        return undefined;\n    }\n\n    parseTerminal(): Value {\n        const result =\n            this.parseCall() || this.parseGroup() || this.parseLiteral();\n\n        if (!result) return result;\n\n        return this.parseIndex(result);\n    }\n\n    parseFactor(): Value {\n        let lhs = this.parseTerminal();\n\n        let op = this.match(/^\\s*([*|/])\\s*/);\n        while (op) {\n            const opFn = {\n                '*': (a: any, b: any): any => a * b,\n                '/': (a: any, b: any): any => a / b,\n            }[op];\n            // Multiplication or division\n            const rhs = this.parseTerminal();\n\n            if (!rhs) this.error(ErrorCode.ExpectedOperand);\n            // Type combination rules (for * AND /)\n            // ---\n            // num * num            -> num\n            // num * angle          -> angle\n            // num * percent        -> percent\n            // num * length         -> length\n            // Other combinations are invalid, but division of two\n            // values of the same type is valid (and yields a unitless number)\n            if (isFloat(rhs)) {\n                if (isFloat(lhs)) {\n                    lhs = new Float(opFn(lhs.value, rhs.value));\n                } else if (isPercentage(lhs)) {\n                    lhs = new Percentage(opFn(lhs.value, rhs.value));\n                } else if (isLength(lhs)) {\n                    lhs = this.applyOpToLength(op, lhs, rhs);\n                } else if (isAngle(lhs)) {\n                    lhs = new Angle(opFn(lhs.value, rhs.value), lhs.unit);\n                } else if (isFrequency(lhs)) {\n                    lhs = new Frequency(opFn(lhs.value, rhs.value), lhs.unit);\n                } else if (isTime(lhs)) {\n                    lhs = new Time(opFn(lhs.value, rhs.value), lhs.unit);\n                }\n            } else if ((isFloat(lhs) || isLength(lhs)) && isLength(rhs)) {\n                return this.applyOpToLength(op, lhs, rhs);\n            } else if (isFloat(lhs)) {\n                if (isPercentage(rhs)) {\n                    lhs = new Percentage(opFn(lhs.value, rhs.value));\n                } else if (isLength(rhs)) {\n                    lhs = this.applyOpToLength(op, lhs, rhs);\n                } else if (isAngle(rhs)) {\n                    lhs = new Angle(opFn(lhs.value, rhs.value), rhs.unit);\n                } else if (isFrequency(rhs)) {\n                    lhs = new Frequency(opFn(lhs.value, rhs.value), rhs.unit);\n                } else if (isTime(rhs)) {\n                    lhs = new Time(opFn(lhs.value, rhs.value), rhs.unit);\n                }\n            } else if (op === '/' && lhs.type() === rhs.type()) {\n                lhs = new Float(lhs.canonicalScalar() / rhs.canonicalScalar());\n            } else {\n                this.error(ErrorCode.InvalidOperand);\n            }\n            op = this.match(/^\\s*([*|/])\\s*/);\n        }\n\n        return lhs;\n    }\n\n    parseTerm(): Value {\n        let lhs = this.parseFactor();\n\n        let op = this.match(/^\\s*([+\\-])\\s*/);\n\n        while (op) {\n            const opFn = {\n                '+': (a: any, b: any): any => a + b,\n                '-': (a: any, b: any): any => a - b,\n            }[op];\n            // Type combination rules (for + AND -)\n            // ---\n            // string + any             -> string\n            // any + string             -> string\n            // num + num                -> num\n            // percentage + num         -> percent\n            // num + percentage         -> percent\n            // percentage + percentage  -> percent\n            // angle + angle            -> angle\n            // length + length          -> length\n            // Other combinations are invalid.\n            const rhs = this.parseFactor();\n\n            if (!rhs) this.error(ErrorCode.ExpectedOperand);\n\n            if (isString(lhs) || isString(rhs)) {\n                if (op === '-') this.error(ErrorCode.InvalidOperand);\n                lhs = new StringValue(opFn(lhs.css(), rhs.css()));\n            } else if (isFloat(lhs) && isFloat(rhs)) {\n                lhs = new Float(opFn(lhs.value, rhs.value));\n            } else if (\n                (isZero(lhs) || isPercentage(lhs)) &&\n                (isZero(rhs) || isPercentage(rhs))\n            ) {\n                lhs = new Percentage(\n                    100 * opFn(asPercent(lhs), asPercent(rhs))\n                );\n            } else if (isZero(lhs) && isTime(rhs)) {\n                lhs = new Time(opFn(0, rhs.value), rhs.unit);\n            } else if (isTime(lhs) && isZero(rhs)) {\n                lhs = new Time(lhs.value, lhs.unit);\n            } else if (isTime(lhs) && isTime(rhs)) {\n                if (lhs.unit === rhs.unit) {\n                    lhs = new Time(opFn(lhs.value, rhs.value), lhs.unit);\n                } else {\n                    lhs = new Time(\n                        opFn(lhs.canonicalScalar(), rhs.canonicalScalar()),\n                        's'\n                    );\n                }\n            } else if (isZero(lhs) && isFrequency(rhs)) {\n                lhs = new Frequency(opFn(0, rhs.value), rhs.unit);\n            } else if (isFrequency(lhs) && isZero(rhs)) {\n                lhs = new Frequency(lhs.value, lhs.unit);\n            } else if (isFrequency(lhs) && isFrequency(rhs)) {\n                if (lhs.unit === rhs.unit) {\n                    lhs = new Frequency(opFn(lhs.value, rhs.value), lhs.unit);\n                } else {\n                    lhs = new Frequency(\n                        opFn(lhs.canonicalScalar(), rhs.canonicalScalar()),\n                        'hz'\n                    );\n                }\n            } else if (isZero(lhs) && isAngle(rhs)) {\n                lhs = new Angle(opFn(0, rhs.value), rhs.unit);\n            } else if (isAngle(lhs) && isZero(rhs)) {\n                lhs = new Angle(lhs.value, lhs.unit);\n            } else if (isAngle(lhs) && isAngle(rhs)) {\n                if (lhs.unit === rhs.unit) {\n                    lhs = new Angle(opFn(lhs.value, rhs.value), lhs.unit);\n                } else {\n                    lhs = new Angle(opFn(asDegree(lhs), asDegree(rhs)), 'deg');\n                }\n            } else if (\n                (isZero(lhs) || isLength(lhs)) &&\n                (isZero(rhs) || isLength(rhs))\n            ) {\n                lhs = this.applyOpToLength(op, lhs, rhs);\n            } else {\n                this.error(ErrorCode.InvalidOperand);\n            }\n            op = this.match(/^\\s*([+\\-])\\s*/);\n        }\n\n        return lhs;\n    }\n\n    parseGroup(): Value {\n        let result: Value;\n        if (this.match('(')) {\n            result = this.parseExpression();\n            this.skipWhiteSpace();\n            if (!this.match(')')) {\n                this.error(ErrorCode.ExpectedCloseParen);\n            }\n        }\n\n        if (result && isFloat(result)) {\n            // If the value of the group is a float\n            // check and handle units that might be after it.\n            // \"(12 + 5)px\"\n            result = this.parseUnit(result.value);\n        }\n\n        return result;\n    }\n\n    parseExpression(): Value {\n        this.skipWhiteSpace();\n        return this.parseTerm();\n    }\n}\n\nexport function parseValue(\n    expression: string,\n    options: ValueParserOptions = {}\n): Value {\n    const stream = new Stream(expression, options);\n    const result = stream.parseExpression();\n    stream.skipWhiteSpace();\n    if (!stream.isEOF()) {\n        // There was some additional content that we couldn't parse.\n        // Return 'undefined' to avoid partially parsing things\n        // that shouldn't be. For example \"3px red\" should\n        // be interpreted as a string, not as \"3px\".\n        return undefined;\n    }\n    result.setSource(expression);\n    return result;\n}\n","/*\n- json/asset\n- json/nested\n- json/flat\n- sketch/palette\n- sketch/palette/v2\n*/\n\nimport {\n    Format,\n    RenderPropertyContext,\n    RenderGroupContext,\n    RenderFileContext,\n} from './formats';\n\nexport const GenericFormats: { formats: { [key: string]: Format } } = {\n    formats: {\n        yaml: {\n            ext: '.yaml',\n\n            renderFile: (context: RenderFileContext): string =>\n                (!context.header\n                    ? ''\n                    : '# ' + context.header.split('\\n').join('\\n# ')) +\n                '\\ntokens:\\n' +\n                context.content,\n\n            renderGroup: (context: RenderGroupContext): string =>\n                '\\t' + context.properties.join('\\n\\t'),\n\n            renderProperty: (context: RenderPropertyContext): string =>\n                `${\n                    !context.definition.comment\n                        ? ''\n                        : '# ' + context.definition.comment + '\\n\\t'\n                }${context.propertyName}: \"${context.propertyValue.replace(\n                    /\"/g,\n                    '\\\\\"'\n                )}\"`,\n        },\n\n        json: {\n            ext: '.json',\n\n            renderFile: (context: RenderFileContext): string => context.content,\n\n            renderGroup: (context: RenderGroupContext): string =>\n                '{\\n\\t' + context.properties.join(',\\n\\t') + '\\n}',\n\n            renderProperty: (context: RenderPropertyContext): string =>\n                `\"${context.propertyName}\": \"${context.propertyValue}\"`,\n        },\n    },\n};\n","// @todo more formats (https://github.com/amzn/style-dictionary/blob/3d0d1c0356d42fc83f905a7e7e4b1c662c77de0b/lib/common/formats.js)\n\n// xCode .colorset: https://developer.apple.com/library/archive/documentation/Xcode/Reference/xcode_ref-Asset_Catalog_Format/Named_Color.html#//apple_ref/doc/uid/TP40015170-CH59-SW1\n\n/*\n- json/asset\n- json/nested\n- json/flat\n- sketch/palette\n- sketch/palette/v2\n*/\n\nimport {\n    RenderFileContext,\n    RenderPropertyContext,\n    RenderGroupContext,\n} from './formats';\n\nfunction sanitizePropertyNameForCSS(name: string): string {\n    return name.replace(/[^a-zA-Z0-9_-]/g, '-');\n}\n\nfunction renderSassProperty(context: RenderPropertyContext): string {\n    return `${\n        !context.definition.comment\n            ? ''\n            : '// ' + context.definition.comment + '\\n'\n    }\\$${sanitizePropertyNameForCSS(context.propertyName)}: ${\n        context.propertyValue\n    } !default;`;\n}\n\nfunction renderCssCustomProperty(context: RenderPropertyContext): string {\n    return `--${sanitizePropertyNameForCSS(context.propertyName)}: ${\n        context.propertyValue\n    };`;\n}\n\nfunction renderSassGroup(context: RenderGroupContext): string {\n    let result = '';\n\n    // Render CSS variables\n    // (i.e. tokens with more than one theme defined)\n    const themedTokens: { [theme: string]: string[] } = {};\n    const nonThemedTokens: string[] = [];\n    context.definitions.forEach((def, token) => {\n        if (Object.keys(def.value).length > 1) {\n            Object.keys(def.value).forEach(theme => {\n                if (!themedTokens[theme]) themedTokens[theme] = [];\n                themedTokens[theme].push(token);\n            });\n        } else {\n            nonThemedTokens.push(token);\n        }\n    });\n\n    Object.keys(themedTokens).forEach(theme => {\n        const customProperties = themedTokens[theme]\n            .map(token =>\n                renderCssCustomProperty({\n                    ...context,\n                    theme: theme,\n                    category: '',\n                    token: token,\n                    definition: context.definitions.get(token),\n                    propertyName: token,\n                    propertyValue: context.values.get(\n                        token + (theme === '_' ? '' : '.' + theme)\n                    ),\n                })\n            )\n            .join('\\n\\t');\n        // if (theme === 'dark' || theme === 'light') {\n        //     result += `@media (prefers-color-scheme: ${theme}) {\\n\\t${customProperties}\\n}\\n`;\n        // }\n        if (theme === '_') {\n            result += `:root {\\n\\t${customProperties}\\n}\\n`;\n        } else {\n            result += `body[data-theme=\"${theme}\"] {\\n\\t${customProperties}\\n}\\n`;\n        }\n    });\n\n    // Render non-CSS variables\n    // (i.e. tokens that have a single theme defined)\n    result += nonThemedTokens\n        .map(token =>\n            renderSassProperty({\n                ...context,\n                category: '',\n                theme: '',\n                token: token,\n                definition: context.definitions.get(token),\n                propertyName: token,\n                propertyValue: context.values.get(token),\n            })\n        )\n        .join('\\n');\n\n    return result;\n}\n\nexport const WebFormats = {\n    formats: {\n        sass: {\n            ext: '.scss',\n            renderFile: (context: RenderFileContext): string =>\n                (!context.header\n                    ? ''\n                    : '/* ' +\n                      context.header.split('\\n').join('\\n * ') +\n                      '\\n */\\n\\n') + context.content,\n\n            renderProperty: renderSassProperty,\n\n            renderGroup: renderSassGroup,\n        },\n\n        plist: {\n            ext: '.plist',\n            renderFile: (context: RenderFileContext): string =>\n                `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\\n\\n` +\n                (context.header\n                    ? '<!-- \\n' + context.header + '\\n-->\\n\\n'\n                    : '') +\n                context.content,\n            renderGroup: (context: RenderGroupContext): string =>\n                `<plist version=\"1.0\"><dict>\\n\\t${context.properties.join(\n                    '\\n\\t'\n                )}\\n</dict></plist>`,\n            renderProperty: (context: RenderPropertyContext): string =>\n                `${\n                    context.definition.comment\n                        ? '<!-- ' + context.definition.comment + ' -->\\n\\t'\n                        : ''\n                }<key>${context.propertyName}</key>\\n\\t<string>${\n                    context.propertyValue\n                }</string> `,\n            valueFormatters: ['color/plist'],\n        },\n\n        // 'css/custom-properties': {\n        //     extends: 'css',\n        //     filenameTemplate: (basename, _theme) => basename + '-' + _theme,\n        //     groupTemplate: options =>\n        //         `:root{\\n\\t--${options.properties.join('\\n\\t--')}\\n}\\n\\n`,\n        // },\n        // css: {\n        //     ext: '.css',\n        //     fileHeader: 'Auto-generated. Do not edit.',\n        //     nameFormatters: ['kebabcase', 'append-theme'],\n        //     propertyTemplate: (name, value, token) =>\n        //         `${name}: ${value}; ${\n        //             token.comment ? '/* ' + token.comment + ' */' : ''\n        //         }`,\n        //     filenameTemplate: (basename, theme) => basename + '-' + theme,\n        //     groupTemplate: options =>\n        //         `:root{\\t\\n\\n${options.properties.join('\\n\\t,  ')}\\n}`,\n        //     fileTemplate: options =>\n        //         (options.header ? '/* ' + options.header + '*/\\n\\n' : '') +\n        //         options.content,\n        // },\n        // js: {},\n    },\n};\n","const marked = require('marked');\nconst highlight = require('highlight.js');\nconst handlebars = require('handlebars');\nconst fs = require('fs');\nimport { Color } from './value-parser';\n\nimport {\n    RenderFileContext,\n    RenderPropertyContext,\n    RenderGroupContext,\n    Format,\n} from './formats';\n\nfunction renderFragment(context: RenderFileContext): string {\n    let result = '';\n    const handlebarsContext = { colors: [], group: '' };\n    context.themes.forEach(theme => {\n        handlebarsContext.group =\n            context.themes.length === 1 ? '' : theme === '_' ? 'Base' : theme;\n        handlebarsContext.colors = [];\n        context.definitions.forEach((def, token) => {\n            if (def.value[theme]) {\n                const qualifiedToken =\n                    token + (theme === '_' ? '' : '.' + theme);\n                const value = context.rawValues.get(qualifiedToken);\n                if (value.type() === 'color') {\n                    const color = value as Color;\n                    let cls = color.luma() >= 1.0 ? 'frame ' : '';\n                    if (color.luma() > 0.42) cls += 'light';\n                    let opaqueColor;\n                    if (color.a < 1.0) {\n                        opaqueColor = new Color(color);\n                        opaqueColor.a = 1.0;\n                    }\n\n                    handlebarsContext.colors.push({\n                        name: token,\n                        def: def.value,\n                        source: color.getSource(),\n                        value: color.css(),\n                        comment: def.comment ?? '',\n                        cls: cls,\n                        opaqueColor: opaqueColor?.css(),\n                    });\n                }\n            }\n        });\n        result += handlebars.compile(\n            fs.readFileSync(__dirname + '/templates/html-colors.hbs', 'utf-8')\n        )(handlebarsContext);\n    });\n\n    if (result) {\n        result = '<h2>Colors</h2>' + result;\n    }\n    return result;\n}\n\nfunction renderFile(context: RenderFileContext): string {\n    return handlebars.compile(\n        fs.readFileSync(__dirname + '/templates/html-file.hbs', 'utf-8')\n    )(context);\n}\n\nfunction renderGroup(context: RenderGroupContext): string {\n    return renderFragment(context);\n}\n\nfunction renderProperty(context: RenderPropertyContext): string {\n    let result = '';\n    result += `<b>${context.propertyName}</b>: ${context.propertyValue}`;\n    if (context.definition.comment) {\n        result += `<p>${context.definition.comment}</p>`;\n    }\n    if (context.definition.remarks) {\n        result += marked(context.definition.remarks);\n    }\n\n    return result;\n}\n\nexport const StyleGuideFormat: { formats: { [key: string]: Format } } = {\n    formats: {\n        'html/fragment': {\n            ext: '.html',\n\n            renderFile: renderFragment,\n\n            renderGroup: renderGroup,\n\n            renderProperty: renderProperty,\n        },\n        html: {\n            extends: 'html/fragment',\n\n            renderFile: renderFile,\n        },\n    },\n};\n\nmarked.setOptions({\n    renderer: new marked.Renderer(),\n    highlight: function(code: string): string {\n        return highlight.highlightAuto(code).value;\n    },\n    pedantic: false,\n    gfm: true,\n    breaks: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false,\n});\n","// @todo handle comments, remarks for non-token scopes (e.g. groups, categories, file). Have a 'categories' key with data for the categories.\n// @todo: group by categories (groupByCategory)\n// @todo: breakpoints (using a 'breakpoint:' instead of 'value:' property)\n// and media queries\n// @todo: array as a value (for scales) and array references in aliases ({font-scale[2]})\n// @todo: compatibility with theo design tokens, support {!} style alias\n\nconst { cosmiconfigSync } = require('cosmiconfig');\nconst configParser = cosmiconfigSync('chromatic');\nconst glob = require('glob');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst yaml = require('yaml');\nconst json5 = require('json5');\nconst resolveFrom = require('resolve-from');\n\nimport { throwError, ErrorCode } from './errors';\nimport { getSuggestion } from './utils';\nimport { DefaultFormatters } from './default-formatters';\nimport {\n    Format,\n    NameFormatter,\n    TokenDefinition,\n    ValueFormatter,\n    DEFAULT_FILE_HEADER,\n    RenderPropertyContext,\n    RenderGroupContext,\n    RenderFileContext,\n} from './formats';\nimport {\n    parseValue,\n    ValueParserOptions,\n    Value,\n    StringValue,\n} from './value-parser';\n\nimport { GenericFormats } from './formats-generic';\nimport { WebFormats } from './formats-web';\nimport { StyleGuideFormat } from './formats-styleguide';\n\nimport { terminal } from './terminal';\n\n//\n// Type definitions\n//\n\ntype TokenGroup = { [token: string]: TokenDefinition | TokenGroup };\n\ntype TokenFile = {\n    theme?: string;\n    import: string | string[];\n    tokens: TokenGroup;\n};\n\ninterface Config extends ValueParserOptions {\n    tokenFileExt?: string;\n    verbose?: boolean;\n\n    /** All the themes to generate output for */\n    themes?: string[];\n\n    /** The default theme when none is provied */\n    defaultTheme?: string;\n\n    /** The output format */\n    outputFormat?: string;\n\n    /** If true, themes are output in separate files. Otherwise, they're\n     * combined in a single file\n     */\n    splitOutput?: boolean;\n\n    /** A list of custom output formats */\n    formats?: { [key: string]: Format };\n    valueFormatters?: { [key: string]: ValueFormatter };\n    nameFormatters?: NameFormatter[];\n\n    /** An object to output error and log messages to (defaults to the system\n     * console) */\n    console?: {\n        error: (m: string) => void;\n        log: (m: string) => void;\n    };\n}\n\ninterface Options {\n    /** If true, only do validation of token files and formats */\n    dryRun: boolean;\n\n    /** Path to a config file */\n    config: string;\n\n    /** A comma delimited list or an array of themes to be processed */\n    themes: string | string[];\n\n    /** The default file extension for token files (when scanning a directory */\n    tokenFileExt: string;\n\n    /** If true, output additional info during processing */\n    verbose: boolean;\n\n    /** Output format */\n    format: string;\n\n    /** Output file or directory */\n    output: string;\n\n    /** A map of name formatter functions */\n    nameFormatters: { [key: string]: NameFormatter };\n\n    /** A map of value formatter functions */\n    valueFormatters: { [key: string]: ValueFormatter };\n\n    /** If true, the process is in 'watch' mode */\n    watching: boolean;\n\n    /** If true, attempt to continue when an error is encountered */\n    ignoreErrors: boolean;\n\n    /** Header to include at the top of each generated file */\n    header: string;\n\n    /** Group the items in a file by their category property */\n    groupByCategory?: boolean;\n\n    /**  Split themes in multiple files. */\n    splitOutput?: boolean;\n\n    /** An object to capture error and log messages to (defaults to the system\n     * console) */\n    console?:\n        | {\n              error: (m: string) => void;\n              log: (m: string) => void;\n          }\n        | string;\n}\n\n//\n// Globals\n//\n\nconst gConfig: Config = {};\n\n/** True if in --watch mode */\nlet gWatching = false;\n\n/** True if an attempt to continue should be made after encountering an error */\nlet gIgnoreErrors = false;\n\n/** The themes encountered while parsing */\nlet gThemes: string[];\n\nlet gTokenDefinitions: Map<string, TokenDefinition>;\n\n/** For a given qualified token, the evaluated value */\nlet gTokenValues: Map<string, Value>;\n\n/**  The qualified token names that are in the process of being evaluated. Used to detect recursive definitions. */\nlet gRecursiveEvaluationStack: string[];\n\n/* Paths of the processed files (used to detect and prevent circular references) */\nlet gProcessedFiles: string[];\n\nfunction error(m: string | string[]): void {\n    if (typeof m === 'string') m = [m];\n\n    // If there are any carriage returns, break them up in separate array elements\n    const msg = '\\n' + [].concat(...m.map(x => x.split('\\n'))).join('\\n    ');\n\n    gConfig.console?.error(terminal.autoFormat(msg));\n\n    if (!gWatching && !gIgnoreErrors) {\n        process.exit(1);\n    }\n}\n\nfunction log(m: string): void {\n    gConfig.console?.log(m);\n}\n\n/**\n * Merge \"source\" into object by doing a deep copy of enumerable properties.\n */\nfunction mergeObject(object: object, source: object): object {\n    if (object === source) return;\n    if (!source) return;\n    Object.keys(source).forEach(key => {\n        if (Array.isArray(source[key])) {\n            if (!object[key]) object[key] = [];\n            object[key] = [...object[key], ...source[key]];\n        } else if (typeof source[key] === 'object') {\n            // Object literal\n            if (!object[key]) object[key] = {};\n            mergeObject(object[key], source[key]);\n        } else if (typeof source[key] !== 'undefined') {\n            object[key] = source[key];\n        }\n    });\n}\n\n/**\n * Return a normalized token value, with default theme applied\n *\n */\nfunction normalizeToken(\n    defaultTheme: string,\n    entry: string | TokenDefinition\n): TokenDefinition {\n    if (\n        typeof entry !== 'string' &&\n        (typeof entry !== 'object' || !entry.value)\n    ) {\n        return undefined;\n    }\n    let result: TokenDefinition = { value: {} };\n    if (typeof entry === 'string') {\n        result.value._ = entry;\n    } else {\n        result = { ...entry };\n    }\n    if (typeof result.value === 'string') {\n        result.value = { _: result.value };\n    }\n\n    // If there is a default theme, apply it now\n    if (defaultTheme && result.value['_']) {\n        result.value[defaultTheme] = result.value['_'];\n        result.value['_'] = undefined;\n    }\n\n    Object.keys(result.value).forEach(theme => {\n        if (!gThemes.includes(theme)) {\n            gThemes.push(theme);\n        }\n    });\n\n    return result;\n}\n\n/**\n * Evaluate an expression (e.g. \"18pt + 5px\" or \"darken(crimson)\") and\n * return a corresponding value.\n *\n * Aliases (denoted by a pair of curly brackets) are resolved.\n *\n */\nfunction evaluateTokenExpression(\n    qualifiedToken: string,\n    expression: string\n): Value {\n    if (!expression) return undefined;\n    if (gRecursiveEvaluationStack.includes(qualifiedToken)) {\n        throwError(ErrorCode.CircularDefinition, qualifiedToken);\n    }\n\n    gRecursiveEvaluationStack.push(qualifiedToken);\n\n    const result = parseValue(expression, {\n        ...gConfig,\n        aliasResolver: (identifier): Value | string => {\n            // If we have already evaluated this token, return its value\n            if (gTokenValues.has(identifier))\n                return gTokenValues.get(identifier);\n\n            // The token 'identifier' has not been evaluated yet.\n            // Let's try to evaluate it now.\n            let aliasValue: Value;\n            if (gTokenDefinitions.has(identifier)) {\n                // There is a token definition with that name\n                // Let's try for a value for the current theme\n                if (gConfig.defaultTheme) {\n                    aliasValue = evaluateTokenExpression(\n                        identifier + '.' + gConfig.defaultTheme,\n                        gTokenDefinitions.get(identifier)?.value[\n                            gConfig.defaultTheme\n                        ]\n                    );\n                }\n                // If that didn't work, try a default value\n                if (!aliasValue) {\n                    aliasValue = evaluateTokenExpression(\n                        identifier,\n                        gTokenDefinitions.get(qualifiedToken)?.value['_']\n                    );\n                }\n            }\n            return aliasValue ?? getSuggestion(identifier, gTokenDefinitions);\n        },\n    });\n    gRecursiveEvaluationStack.pop();\n\n    return result;\n}\n\n/**\n * Process an object literal that contains a group of tokens\n *\n * @param tokenFile - A parsed token file\n * @param tokenPath - A dot separated path to this group, if not at root\n * @param tokens - A key/value map of token names and values\n */\nfunction processTokenGroup(\n    tokenFile: TokenFile,\n    tokenPath: string,\n    tokens: object\n): void {\n    if (Array.isArray(tokens)) {\n        throwError(\n            ErrorCode.UnexpectedTokensArray,\n            terminal.link('tokens-as-array')\n        );\n    }\n    Object.keys(tokens).forEach(token => {\n        const qualifiedToken = (tokenPath ? tokenPath + '.' : '') + token;\n        if (!/^[a-zA-Z0-9_-]+$/.test(token)) {\n            throwError(ErrorCode.InvalidTokenName, qualifiedToken);\n        }\n        if (!tokens[token]) {\n            throwError(ErrorCode.InvalidTokenValue, token);\n        }\n        try {\n            const normalizedToken = normalizeToken(\n                tokenFile.theme ?? gConfig.defaultTheme,\n                tokens[token]\n            );\n            if (!normalizedToken) {\n                // If it's not a token, it's a group of tokens\n                processTokenGroup(tokenFile, qualifiedToken, tokens[token]);\n            } else {\n                if (!gTokenDefinitions.has(qualifiedToken)) {\n                    gTokenDefinitions.set(qualifiedToken, normalizedToken);\n                } else {\n                    // There's already a definition for this token.\n                    // Check that the types are consistent.\n                    if (\n                        normalizedToken.type &&\n                        gTokenDefinitions.get(qualifiedToken).type &&\n                        gTokenDefinitions.get(qualifiedToken).type !==\n                            normalizedToken.type\n                    ) {\n                        throwError(\n                            ErrorCode.InconsistentTokenType,\n                            normalizedToken.type,\n                            gTokenDefinitions.get(qualifiedToken).type\n                        );\n                    }\n\n                    // Merge the new definition with the previous one\n                    const mergedToken = gTokenDefinitions.get(qualifiedToken);\n                    mergeObject(mergedToken, normalizedToken);\n                    gTokenDefinitions.set(qualifiedToken, mergedToken);\n                }\n            }\n        } catch (err) {\n            throw new Error(\n                `${qualifiedToken}: \"${tokens[token]}\"\\n${err.message}`\n            );\n        }\n    });\n}\n\n/**\n * @param  f    - path to a file or directory. If a directory,\n * its content are recursively walked and parsed\n *\n * The result of the processing is accumulated in gTokenDefinitions.\n *\n */\nfunction processPath(f: string): void {\n    const errors: string[] = [];\n    f = path.resolve(path.normalize(f));\n\n    // Avoid processing the same file (or directory) more than once\n    if (gProcessedFiles.includes(f)) return;\n    gProcessedFiles.push(f);\n\n    // If the path to process is a directory, process (recursively) all the\n    // token files it contains.\n    if (fs.lstatSync(f).isDirectory()) {\n        glob.sync(f + '/**/*.' + gConfig.tokenFileExt).forEach(processPath);\n        return;\n    }\n\n    //\n    // 1. Read the token file\n    //\n\n    let tokenFile: TokenFile;\n\n    try {\n        const content = fs.readFileSync(f, 'utf8');\n        if (/^\\.json/.test(path.extname(f))) {\n            // If the extension is \".json\", \".jsonc\", \".json5\", etc.., attempt to read it as a JSON5 file\n            tokenFile = json5.parse(content);\n        } else {\n            tokenFile = yaml.parse(content);\n        }\n    } catch (err) {\n        errors.push((err.name ? err.name + ': ' : '') + err.message);\n    }\n\n    //\n    // 2. Process any 'import' directive\n    //\n    if (tokenFile?.import) {\n        if (typeof tokenFile.import === 'string') {\n            tokenFile.import = [tokenFile.import];\n        }\n        if (Array.isArray(tokenFile.import)) {\n            tokenFile.import.forEach((x: any) => {\n                let resolvedPath = f;\n                try {\n                    resolvedPath = resolveFrom(path.parse(f).dir, x);\n                    processPath(resolvedPath);\n                } catch (err) {\n                    errors.push(`option \"import: ${x}\"`);\n                    if (err.code === 'MODULE_NOT_FOUND') {\n                        errors.push(\n                            'Module not found.' +\n                                (x.slice(0, 2) === './'\n                                    ? ''\n                                    : `\\nTo import as a file, use a relative path: \"./${x}\"`)\n                        );\n                    } else if (err.code === 'ENOENT') {\n                        errors.push(\n                            '→ ' +\n                                terminal.path(resolvedPath) +\n                                '\\nFile not found.'\n                        );\n                    } else {\n                        errors.push(err.message);\n                    }\n                }\n            });\n        } else {\n            errors.push(\n                'Option \"import\" should be a path or an array of paths'\n            );\n        }\n    }\n\n    if (tokenFile && gConfig.verbose) {\n        if (\n            (tokenFile['imports'] ||\n                tokenFile['extends'] ||\n                tokenFile['include'] ||\n                tokenFile['includes']) &&\n            !tokenFile.import\n        ) {\n            log(\n                terminal.warning() +\n                    terminal.path(path.relative('', f)) +\n                    `\\n${terminal.warning(\n                        'Warning:'\n                    )} use the \\`\"import\"\\` property to import other token files`\n            );\n        }\n    }\n\n    //\n    // 3. Process any token declaration\n    //\n    if (tokenFile?.tokens) {\n        try {\n            if (typeof tokenFile.tokens !== 'object') {\n                throwError(ErrorCode.UnexpectedTokensType);\n            } else {\n                processTokenGroup(tokenFile, '', tokenFile.tokens);\n            }\n        } catch (err) {\n            errors.push(err.message);\n        }\n    }\n\n    //\n    // 4. Display any accumulated errors\n    //\n    if (gConfig.verbose && errors.length === 0) {\n        log(\n            terminal.success() +\n                '← ' +\n                terminal.path(\n                    process.env.TEST ? path.basename(f) : path.relative('', f)\n                )\n        );\n    }\n    if (errors.length > 0) {\n        error([\n            terminal.error() +\n                terminal.path(\n                    process.env.TEST ? path.basename(f) : path.relative('', f)\n                ),\n            ...errors,\n        ]);\n    }\n}\n\nfunction formatTokenValues(\n    tokens: string[],\n    valueFormatter: ValueFormatter\n): Map<string, string> {\n    if (!valueFormatter) return undefined;\n    const result = new Map<string, string>();\n    tokens.forEach(token => {\n        try {\n            result.set(token, valueFormatter(gTokenValues.get(token)));\n        } catch (err) {\n            error([\n                terminal.error(\n                    `Error formatting \"${gTokenValues\n                        .get(token)\n                        .css()}\" for the \"${token}\" token`\n                ),\n                err.message,\n            ]);\n        }\n    });\n    return result;\n}\n\nfunction areThemesValid(): boolean {\n    // Filter out themes\n    if (gConfig.themes?.length > 0) {\n        gThemes = gThemes.filter(x => gConfig.themes.includes(x));\n    }\n\n    // Check\n    gThemes.forEach(theme => {\n        let count = 0;\n        gTokenDefinitions.forEach((entry, _token) => {\n            if (typeof entry.value[theme] !== 'undefined') {\n                count += 1;\n            }\n        });\n        if (count === 0) {\n            gThemes.splice(gThemes.indexOf(theme), 1);\n        }\n    });\n\n    if (gThemes.length === 0 || gTokenDefinitions.size === 0) {\n        error([\n            terminal.error('No tokens found.'),\n            `Token files should have a \"${'tokens'}\" property`,\n            terminal.link('../guide'),\n        ]);\n        return false;\n    }\n\n    return true;\n}\n\nfunction setFormat(formatName: string): Format {\n    const result: Format = {\n        fileHeader: DEFAULT_FILE_HEADER,\n        renderFilename: function({\n            theme,\n            basename,\n        }: {\n            theme: string;\n            basename: string;\n        }): string {\n            return basename + (!theme ? '' : '-' + theme);\n        },\n        renderGroup: (context: RenderGroupContext): string =>\n            context.properties.join('\\n'),\n        renderFile: (context: RenderFileContext): string => context.content,\n    };\n\n    if (!gConfig.formats[formatName]) {\n        throwError(\n            ErrorCode.UnknownFormat,\n            formatName,\n            getSuggestion(formatName, gConfig.formats)\n        );\n    }\n\n    // If this format extends another...\n    const baseFormat = gConfig.formats[formatName].extends;\n    if (typeof baseFormat === 'string') {\n        if (gConfig.formats[baseFormat]) {\n            mergeObject(result, gConfig.formats[baseFormat]);\n            mergeObject(result, gConfig.formats[formatName]);\n        } else {\n            throwError(\n                ErrorCode.UnknownFormat,\n                formatName,\n                getSuggestion(formatName, gConfig.formats)\n            );\n        }\n    } else {\n        mergeObject(result, gConfig.formats[formatName]);\n    }\n\n    // Normalize shorthand format for valueFormatters and nameFormatters\n    if (typeof result.valueFormatter === 'string') {\n        if (!gConfig.valueFormatters[result.valueFormatter]) {\n            throwError(\n                ErrorCode.UnknownValueFormatter,\n                result.valueFormatter,\n                getSuggestion(result.valueFormatter, gConfig.valueFormatters)\n            );\n        }\n    } else if (typeof result.valueFormatter !== 'function') {\n        result.valueFormatter = (v): string => v.css();\n    }\n\n    if (typeof result.nameFormatter === 'string') {\n        if (!gConfig.nameFormatters[result.nameFormatter]) {\n            throwError(\n                ErrorCode.UnknownNameFormatter,\n                result.nameFormatter,\n                getSuggestion(result.nameFormatter, gConfig.nameFormatters)\n            );\n        }\n    } else if (typeof result.nameFormatter !== 'function') {\n        result.nameFormatter = (n, theme): string =>\n            n + (!theme || theme === '_' ? '' : '-' + theme);\n    }\n\n    // Provide a default property template if none is provided\n    // but issue a warning, as those should really be provided.\n    if (typeof result.renderProperty !== 'function') {\n        if (gConfig.verbose) {\n            log(\n                terminal.warning('Warning: ') +\n                    ` the \"${formatName}\" format does not have a \\`propertyTemplate\\` function`\n            );\n        }\n        result.renderProperty = (context: RenderPropertyContext): string =>\n            `${context.propertyName}${\n                context.theme ? '-' + context.theme : ''\n            }: ${context.propertyValue}`;\n    }\n\n    return result;\n}\n\nfunction renderFile(format: Format, context: RenderFileContext): string {\n    // @todo: filter tokens as necessary\n    /** List of generated properties (used to detect duplicates).\n     * Note those are not *token names* they are formatted property names */\n    const propertyNames: string[] = [];\n\n    const tokens = [];\n    gTokenDefinitions.forEach((def, token) => {\n        Object.keys(def.value).forEach(tokenTheme => {\n            if (context.themes.includes(tokenTheme)) {\n                tokens.push(\n                    tokenTheme === '_' ? token : token + '.' + tokenTheme\n                );\n            }\n        });\n    });\n\n    // 1. Apply the value formatter\n\n    const formattedTokenValues = formatTokenValues(\n        tokens,\n        format.valueFormatter\n    );\n\n    // 2. If there are any remaining unresolved aliases (in a string such\n    // as \"1px solid {color.border.base}\", for example), replace their value.\n\n    formattedTokenValues.forEach((value, token) => {\n        const newValue = value.replace(/{[a-zA-Z0-9_-]+}/g, match => {\n            const alias = match.slice(1, -1);\n            if (formattedTokenValues.has(alias)) {\n                return formattedTokenValues.get(alias);\n            }\n\n            const msg =\n                terminal.error('Unresolved alias. ') +\n                `Cannot find token \"${match}\"` +\n                getSuggestion(alias, formattedTokenValues);\n            error(msg);\n            return match;\n        });\n\n        if (newValue) formattedTokenValues.set(token, newValue);\n    });\n\n    // 3. Render the properties\n\n    const properties = [];\n    context.themes.forEach(theme => {\n        gTokenDefinitions.forEach((def, token) => {\n            if (typeof def.value[theme] === 'undefined') return;\n\n            // 3.1. Calculate the property name. Check it's not a duplicate\n            const propertyName = format.nameFormatter(token, theme);\n\n            if (propertyNames.includes(propertyName)) {\n                if (propertyName !== token) {\n                    log(\n                        terminal.warning('Warning: ') +\n                            ` the \"${token}\" token has multiple definitions as \"${propertyName}\"`\n                    );\n                } else {\n                    log(\n                        terminal.warning('Warning: ') +\n                            ` the \"${token}\" token has multiple definitions`\n                    );\n                }\n            }\n            propertyNames.push(propertyName);\n\n            // 3.2 Calculate the property (name + value)\n            const qualifiedToken = token + (theme === '_' ? '' : '.' + theme);\n            properties.push(\n                format.renderProperty({\n                    ...context,\n                    theme: theme,\n                    category: '',\n                    properties: properties,\n                    values: formattedTokenValues,\n\n                    token: qualifiedToken,\n                    definition: def,\n                    propertyName: propertyName,\n                    propertyValue: formattedTokenValues.get(qualifiedToken),\n                })\n            );\n        });\n    });\n\n    // 4. Render the file\n    return format.renderFile({\n        ...context,\n        content: format.renderGroup({\n            ...context,\n            category: '',\n            properties: properties,\n            values: formattedTokenValues,\n        }),\n    });\n}\n\nfunction render(\n    baseOutputPath: string,\n    format: Format\n): { [filename: string]: string } {\n    const result = {};\n\n    // Check that there are tokens in each of the themes\n    if (!areThemesValid()) return;\n\n    const pathRecord = (baseOutputPath && path.parse(baseOutputPath)) ?? {\n        name: 'tokens',\n    };\n\n    const context: RenderFileContext = {\n        filepath: '',\n        themes: [],\n        header: format.fileHeader,\n        definitions: gTokenDefinitions,\n        rawValues: gTokenValues,\n        content: '',\n    };\n\n    if (gConfig.splitOutput) {\n        // Output one file per theme\n        gThemes.forEach(theme => {\n            context.filepath = path.format({\n                dir: pathRecord.dir,\n                name: format.renderFilename({\n                    theme: theme,\n                    basename: pathRecord.name,\n                }),\n                ext: format.ext,\n            });\n\n            context.themes = [theme];\n            result[context.filepath] = renderFile(format, context);\n        });\n    } else {\n        // Output a single file for all themes\n        context.filepath = path.format({\n            dir: pathRecord.dir,\n            name: format.renderFilename({\n                theme: '',\n                basename: pathRecord.name,\n            }),\n            ext: format.ext,\n        });\n        context.themes = gThemes;\n        result[context.filepath] = renderFile(format, context);\n    }\n\n    return result;\n}\n\nfunction writeOutputFile(content: string, outputPath: string): void {\n    const dirname = path.dirname(outputPath);\n    if (!fs.existsSync(dirname)) {\n        fs.mkdirsSync(dirname);\n    }\n    fs.writeFileSync(outputPath, content);\n    if (gConfig.verbose || gWatching) {\n        log(\n            terminal.success() +\n                (gWatching ? terminal.time() + ' ' : '') +\n                '→ ' +\n                terminal.path(path.relative('', outputPath))\n        );\n    }\n}\n\n/**\n * @returns A map where the key is a filename and the value is\n * the content of the file.\n */\nfunction build(\n    paths: string[],\n    options: Options\n): { [filename: string]: string } {\n    //\n    // 1. Process each file or directory\n    //\n    //    Parse the token files and accumulate the qualified token names\n    //    (dot-separated paths) with their normalized definition (TokenDefinition)\n    //    in gTokenDefinitions (in a normalized definition, the default theme has been applied, replacing '_')\n    //\n    gWatching = options?.watching ?? false;\n\n    gThemes = [];\n    gTokenDefinitions = new Map();\n    gTokenValues = new Map();\n    gRecursiveEvaluationStack = [];\n    gProcessedFiles = [];\n\n    paths.forEach((x: string): void => {\n        const files = glob.sync(x);\n        if (files.length === 0) {\n            error(terminal.error('File not found: ') + terminal.path(x));\n            return;\n        }\n        files.forEach(processPath);\n    });\n\n    //\n    // 2. Evaluate the tokens\n    //\n    // Evaluate the token value expressions, including aliases,\n    // except in strings. Store the result in gTokenValues.\n\n    gTokenDefinitions.forEach((def, token) => {\n        Object.keys(def.value).forEach(theme => {\n            const qualifiedToken = token + (theme === '_' ? '' : '.' + theme);\n            let value;\n            try {\n                value = evaluateTokenExpression(\n                    qualifiedToken,\n                    def.value[theme]\n                );\n                if (!value) {\n                    value = new StringValue(def.value[theme]);\n                    // throw new Error(\n                    //     'Could not evaluate expression \"' + def.value[theme] + '\"'\n                    // );\n                }\n            } catch (err) {\n                error([\n                    terminal.error('Syntax error') +\n                        ` in \"${token + \": '\" + def.value[theme]}\\'\"`,\n                    err.message,\n                ]);\n                value = new StringValue(def.value[theme]);\n            }\n            gTokenValues.set(qualifiedToken, value);\n\n            const actualType = value.type();\n\n            if (def.type && actualType != def.type) {\n                log(\n                    terminal.warning('Warning:') +\n                        ` Type mismatch. Expected \\`${def.type}\\` but got \\`${actualType}\\` for \"${qualifiedToken}\" token`\n                );\n            }\n\n            // @todo: cross-check category\n        });\n    });\n\n    //\n    // 3. Format and output\n    //\n    try {\n        // 3.1 Determine the output format\n\n        const format = setFormat(gConfig.outputFormat);\n\n        // Override format settings from options\n        format.fileHeader = options.header ?? format.fileHeader;\n\n        //\n        // 3.2. Render the properties\n        //\n        const outputPath = options?.output && path.resolve(options.output);\n        const content = render(outputPath, format);\n\n        //\n        // 3.3. Write the files\n        //\n        if (content && !options?.dryRun) {\n            if (!outputPath) {\n                return content;\n            } else {\n                if (gConfig.verbose) {\n                    let themesMessage = '';\n                    if (gThemes.length !== 1 || gThemes[0] !== '_') {\n                        if (gThemes.length === 1) {\n                            themesMessage = `for theme \"${gThemes[0]}\"`;\n                        } else {\n                            themesMessage =\n                                'for themes ' +\n                                gThemes.map(x => '\"' + x + '\"').join(', ');\n                        }\n                    }\n                    log(\n                        `    Writing ${terminal.string(\n                            gConfig.outputFormat\n                        )} format ${themesMessage}`\n                    );\n                }\n                Object.keys(content).forEach(file => {\n                    writeOutputFile(content[file], file);\n                });\n            }\n        }\n    } catch (err) {\n        error(terminal.error(err.message));\n    }\n    return {};\n}\n\n/**\n * The main entry point of Chromatic.\n *\n * @param paths - A list of files or directories to process\n * @returns If the result is a single file, the content of the\n * file as a string. Otherwise, a map of key/values, where the\n * key is the file name and the value is the content.\n *\n */\n\nexport function chromatic(\n    paths: string | string[],\n    options: Options\n): { [filename: string]: string } {\n    if (typeof paths === 'string') {\n        paths = [paths];\n    }\n\n    //\n    // 1. Load from 'standard' config locations\n    //\n    let configResult = configParser.search();\n    if (!(configResult?.isEmpty ?? true)) {\n        mergeObject(gConfig, configResult.config);\n    }\n\n    //\n    // 2. If a config file is specified, merge with previous config\n    //\n    if (options?.config) {\n        configResult = configParser.load(options.config);\n        if (!(configResult?.isEmpty ?? true)) {\n            mergeObject(gConfig, configResult.config);\n        }\n    }\n\n    //\n    // 3. If options are specified, merge with previous config\n    //\n    if (options?.themes) {\n        if (typeof options.themes === 'string') {\n            gConfig.themes = options.themes\n                .split(',')\n                .map((x: string) => x.trim());\n        } else if (Array.isArray(options.themes)) {\n            gConfig.themes = [...options.themes];\n        }\n    }\n\n    gIgnoreErrors = options?.ignoreErrors ?? false;\n\n    // Configure the console/logger\n    const messages: string[] = [];\n    if (typeof options?.console === 'string') {\n        if (options?.console === 'log') {\n            terminal.useColor(false);\n            gConfig.console = {\n                log: (m: string): void => {\n                    messages.push(m);\n                },\n                error: (m: string): void => {\n                    messages.push(m);\n                },\n            };\n        }\n    } else {\n        gConfig.console = options?.console ?? {\n            // Output \"log\" (i.e. warnings) message to stdout (console.error)\n            log: (m: string): void => console.error(m),\n            error: (m: string): void => console.error(m),\n        };\n    }\n\n    if (!gConfig.themes) gConfig.themes = [];\n\n    gConfig.tokenFileExt =\n        options?.tokenFileExt ?? gConfig?.tokenFileExt ?? 'yaml';\n\n    gConfig.verbose = options?.verbose ?? gConfig?.verbose ?? false;\n\n    gConfig.splitOutput = options.splitOutput;\n\n    gConfig.outputFormat = options?.format ?? gConfig?.outputFormat ?? '';\n\n    if (!gConfig.outputFormat) {\n        // Try to guess the format based on the extension of the output file\n        const fileExt = options?.output && path.extname(options?.output);\n        if (fileExt) {\n            const matchingExtensions = Object.keys(gConfig.formats).filter(\n                x => gConfig.formats[x].ext === fileExt\n            );\n            if (matchingExtensions.length === 1) {\n                gConfig.outputFormat = matchingExtensions[0];\n            } else {\n                // Multiple (or no) format can output to this extension.\n                // If there is one whose name is exactly the extension, use it.\n                if (gConfig.formats[fileExt.slice(1)]) {\n                    gConfig.outputFormat = fileExt.slice(1);\n                } else if (matchingExtensions.length > 1) {\n                    error([\n                        terminal.error('Ambiguous format. ') +\n                            `Use ${terminal.keyword(\n                                '--format'\n                            )} to indicate which output format to use.`,\n                        `Did you mean \\`${matchingExtensions.join(', ')}\\`?`,\n                    ]);\n                }\n            }\n        }\n\n        if (gConfig.outputFormat) {\n            if (gConfig.verbose) {\n                log(\n                    terminal.warning() +\n                        `Setting the format to \"gConfig.outputFormat\" based on the output file extension. ` +\n                        'Use `--format` to indicate which output format to use.'\n                );\n            }\n        } else {\n            gConfig.outputFormat = 'yaml';\n            log(\n                terminal.warning('Format not specified.') +\n                    ` Using \"${terminal.keyword('yaml')}\". ` +\n                    `Use ${terminal.keyword(\n                        '--format'\n                    )} to indicate which output format to use.`\n            );\n        }\n    }\n\n    // Merge (registers) any custom formatters\n    mergeObject(gConfig.nameFormatters, options?.nameFormatters);\n    mergeObject(gConfig.valueFormatters, options?.valueFormatters);\n\n    const result = build(paths, options);\n    if (messages.length > 0) {\n        result['stderr'] = messages.join('\\n');\n    }\n    return result;\n}\n\nmergeObject(gConfig, DefaultFormatters);\nmergeObject(gConfig, WebFormats);\nmergeObject(gConfig, GenericFormats);\nmergeObject(gConfig, StyleGuideFormat);\n\nmodule.exports = chromatic;\n","import { chromatic } from './chromatic';\nimport { terminal } from './terminal';\n\nconst chokidar = require('chokidar');\n\nfunction logResult(result: { [file: string]: string }): void {\n    console.log(\n        Object.keys(result)\n            .map(\n                x =>\n                    (x === 'stderr' ? terminal.error() : terminal.success()) +\n                    '>>>> ' +\n                    terminal.path(x) +\n                    '\\n' +\n                    result[x]\n            )\n            .join('\\n')\n    );\n}\n\nconst argv = require('yargs')\n    .usage('Usage: $0 file(s) [options]')\n    .example(\n        '$0 ./assets/tokens.yaml -o ./build/tokens.scss',\n        'Generate a Sass file from a design tokens YAML file'\n    )\n    .option('output', {\n        alias: 'o',\n        describe: 'Save output to path',\n        type: 'path',\n    })\n    .normalize('output')\n    .option('format', {\n        alias: 'f',\n        describe: 'Output format: css|sass|js|yaml|json',\n        type: 'string',\n    })\n    .option('header', {\n        describe: 'Content inserted at the to of the output file',\n        type: 'string',\n    })\n    .option('themes', {\n        describe: 'Comma separated list of themes to process',\n        type: 'string',\n    })\n    .option('split-output', {\n        describe:\n            'If there are multiple themes, output one file per theme. Otherwise the themes are combined in a single file.',\n        type: 'boolean',\n        default: false,\n    })\n    .option('token-file-ext', {\n        describe: 'Default file extension of token files',\n        type: 'string',\n        default: '.yaml',\n    })\n    .option('dry-run', {\n        describe:\n            \"Validate the token files, attempt to generate the specified file format, but don't output anything\",\n        conflicts: 'output',\n        type: 'boolean',\n    })\n    .option('config', {\n        describe: 'Load config file from path',\n        type: 'path',\n    })\n    .normalize('config')\n    .option('verbose', {\n        describe: 'Display additional information during processing',\n        type: 'boolean',\n    })\n    .option('no-color', {\n        describe: 'Suppress color output in terminal',\n        type: 'boolean',\n    })\n    .option('ignore-errors', {\n        alias: 'i',\n        describe: 'Attempt to continue when an error is encountered',\n        type: 'boolean',\n    })\n    .option('watch', {\n        describe: 'Watch for changes to the token files and rebuild',\n        type: 'boolean',\n    })\n    .help('h')\n    .alias('h', 'help')\n    .epilogue(\n        'For more information, see https://github.com/arnog/chromatic/docs/guide.md'\n    )\n    .strict(true).argv;\n\nif (typeof process.stdin.isTTY !== 'undefined' && !process.stdin.isTTY) {\n    // The command was piped, e.g.\n    // `echo \"foo\" | chromatic`\n    process.stdin.setEncoding('utf-8');\n    let input = '';\n    process.stdin.on('readable', function() {\n        let chunk: string;\n        while ((chunk = process.stdin.read())) {\n            input += chunk;\n        }\n    });\n\n    process.stdin.on('end', function() {\n        logResult(chromatic(input, argv));\n    });\n} else {\n    // The command was not piped\n    if (argv._.length < 1) {\n        console.error(\n            terminal.error() +\n                `Expected at least one path to a directory or token file. Use ${terminal.keyword(\n                    '--help'\n                )} for available options.`\n        );\n        process.exit(1);\n    }\n\n    if (argv.watch) {\n        chokidar.watch(argv._).on('all', (_event: any, _path: string) => {\n            chromatic(argv._, { ...argv, ...{ watching: true } });\n            console.log(\n                terminal.time() +\n                    ` ${terminal.dim(\n                        argv.$0\n                    )}: Waiting for changes... ${terminal.dim(\n                        'Press Ctrl-C to exit.'\n                    )}`\n            );\n        });\n    } else {\n        logResult(chromatic(argv._, argv));\n    }\n}\n"],"names":["fs","renderFile"],"mappings":"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"}